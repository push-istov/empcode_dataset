<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html lang="en">
 <head>
  <script async="" src="https://www.google-analytics.com/analytics.js" type="text/javascript">
  </script>
  <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-K230KVN22K&amp;l=dataLayer&amp;cx=c&amp;gtm=457e4b70za200" type="text/javascript">
  </script>
  <script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-743380-5">
  </script>
  <script>
   window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', 'UA-743380-5');
  </script>
  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
  <meta content="f74f2aa5e578c2fd20fb35fde60d1cbd" name="X-Csrf-Token"/>
  <meta content="width=device-width, initial-scale=0.01" id="viewport" name="viewport"/>
  <script src="//codeforces.org/s/66284/js/jquery-1.8.3.js" type="text/javascript">
  </script>
  <script type="application/javascript">
   window.locale = "en";
        window.standaloneContest = false;
        function adjustViewport() {
            var screenWidthPx = Math.min($(window).width(), window.screen.width);
            var siteWidthPx = 1100; // min width of site
            var ratio = Math.min(screenWidthPx / siteWidthPx, 1.0);
            var viewport = "width=device-width, initial-scale=" + ratio;
            $('#viewport').attr('content', viewport);
            var style = $('<style>html * { max-height: 1000000px; }</style>');
            $('html > head').append(style);
        }

        if ( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {
            adjustViewport();
        }

        /* Protection against trailing dot in domain. */
        let hostLength = window.location.host.length;
        if (hostLength > 1 && window.location.host[hostLength - 1] === '.') {
            window.location = window.location.protocol + "//" + window.location.host.substring(0, hostLength - 1);
        }
  </script>
  <meta content="no-cache" http-equiv="pragma"/>
  <meta content="-1" http-equiv="expires"/>
  <meta content="j2" http-equiv="profileName"/>
  <meta content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90" name="google-site-verification"/>
  <meta content="100001352546622" property="fb:admins"/>
  <meta content="//codeforces.org/s/66284/images/codeforces-sponsored-by-ton.png" property="og:image"/>
  <link href="//codeforces.org/s/66284/images/codeforces-sponsored-by-ton.png" rel="image_src"/>
  <meta content="Submission #285418011 - Codeforces" property="og:title"/>
  <meta content="" property="og:description"/>
  <meta content="Codeforces" property="og:site_name"/>
  <meta content="c0507c7bdc755c404c1e0a2c7b50eda4a8f204ec" name="uc"/>
  <meta content="4528723801d60bc56a18fd3053872f9e4c436141" name="usmc"/>
  <meta content="230879f5c365fd773e0f9ec442efca4c1ff41301" name="cc"/>
  <meta content="6be3ea3a89c3fc20270445bb4cf8f30b3047c08b" name="pc"/>
  <meta content="+03:00" name="utc_offset"/>
  <meta content="f56f99fd7e087fb6ccb48ef2" name="verify-reformal"/>
  <title>
   Submission #285418011 - Codeforces
  </title>
  <meta content="Codeforces. Programming competitions and contests, programming community" name="description"/>
  <meta content="programming algorithm contest competition informatics olympiads c++ java graphs vkcup" name="keywords"/>
  <meta content="index, follow" name="robots"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/font-awesome.min.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/line-awesome.min.css" rel="stylesheet" type="text/css"/>
  <link href="//fonts.googleapis.com/css?family=PT+Sans+Narrow:400,700&amp;subset=latin,cyrillic" rel="stylesheet" type="text/css"/>
  <link href="//fonts.googleapis.com/css?family=Cuprum&amp;subset=latin,cyrillic" rel="stylesheet" type="text/css"/>
  <link href="//codeforces.org/s/66284/apple-icon-57x57.png" rel="apple-touch-icon" sizes="57x57"/>
  <link href="//codeforces.org/s/66284/apple-icon-60x60.png" rel="apple-touch-icon" sizes="60x60"/>
  <link href="//codeforces.org/s/66284/apple-icon-72x72.png" rel="apple-touch-icon" sizes="72x72"/>
  <link href="//codeforces.org/s/66284/apple-icon-76x76.png" rel="apple-touch-icon" sizes="76x76"/>
  <link href="//codeforces.org/s/66284/apple-icon-114x114.png" rel="apple-touch-icon" sizes="114x114"/>
  <link href="//codeforces.org/s/66284/apple-icon-120x120.png" rel="apple-touch-icon" sizes="120x120"/>
  <link href="//codeforces.org/s/66284/apple-icon-144x144.png" rel="apple-touch-icon" sizes="144x144"/>
  <link href="//codeforces.org/s/66284/apple-icon-152x152.png" rel="apple-touch-icon" sizes="152x152"/>
  <link href="//codeforces.org/s/66284/apple-icon-180x180.png" rel="apple-touch-icon" sizes="180x180"/>
  <link href="//codeforces.org/s/66284/android-icon-192x192.png" rel="icon" sizes="192x192" type="image/png"/>
  <link href="//codeforces.org/s/66284/favicon-32x32.png" rel="icon" sizes="32x32" type="image/png"/>
  <link href="//codeforces.org/s/66284/favicon-96x96.png" rel="icon" sizes="96x96" type="image/png"/>
  <link href="//codeforces.org/s/66284/favicon-16x16.png" rel="icon" sizes="16x16" type="image/png"/>
  <link href="/manifest.json" rel="manifest"/>
  <meta content="#ffffff" name="msapplication-TileColor"/>
  <meta content="//codeforces.org/s/66284/ms-icon-144x144.png" name="msapplication-TileImage"/>
  <meta content="#ffffff" name="theme-color"/>
  <!--CombineResourcesFilter-->
  <link charset="utf-8" href="//codeforces.org/s/66284/css/prettify.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/clear.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/style.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/ttypography.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/problem-statement.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/second-level-menu.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/roundbox.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/datatable.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/table-form.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/topic.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/jquery.jgrowl.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/facebox.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/jquery.autocomplete.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/codeforces.datepick.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/colorbox.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/jquery.drafts.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/css/community.css" rel="stylesheet" type="text/css"/>
  <!-- MathJax -->
  <script type="text/x-mathjax-config;executed=true">
   MathJax.Hub.Config({
      tex2jax: {inlineMath: [['$$$','$$$']], displayMath: [['$$$$$$','$$$$$$']]}
    });
    MathJax.Hub.Register.StartupHook("End", function () {
        Codeforces.runMathJaxListeners();
    });
  </script>
  <script async="" src="https://mathjax.codeforces.org/MathJax.js?config=TeX-AMS_HTML-full" type="text/javascript">
  </script>
  <!-- /MathJax -->
  <script src="//codeforces.org/s/66284/js/prettify/prettify.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/moment-with-locales.min.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/pushstream.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.easing.min.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.lavalamp.min.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.jgrowl.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.swipe.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.hotkeys.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/facebox.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.wysiwyg.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/controls/wysiwyg.colorpicker.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/controls/wysiwyg.table.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/controls/wysiwyg.image.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/controls/wysiwyg.link.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.autocomplete.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.datepick.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.ie6blocker.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.colorbox-min.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.ba-bbq.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/jquery.drafts.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/clipboard.min.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/autosize.min.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/sjcl.js" type="text/javascript">
  </script>
  <script src="/scripts/9aa4ece74af7823932a6a7ae18ce3579/en/codeforces-options.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/codeforces.js?v=20160131" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/EventCatcher.js?v=20160131" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/preparedVerdictFormats-en.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/js/confetti.min.js" type="text/javascript">
  </script>
  <!--/CombineResourcesFilter-->
  <link charset="utf-8" href="//codeforces.org/s/66284/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css"/>
  <link charset="utf-8" href="//codeforces.org/s/66284/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css"/>
  <script src="//codeforces.org/s/66284/markitup/jquery.markitup.js" type="text/javascript">
  </script>
  <script src="//codeforces.org/s/66284/markitup/sets/markdown/set.js" type="text/javascript">
  </script>
  <!--[if IE]>
    <style>
        #sidebar {
            padding-left: 1em;
            margin: 1em 1em 1em 0;
        }
    </style>
    <![endif]-->
  <style type="text/css">
   .MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
  </style>
  <style type="text/css">
   #MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
  </style>
  <style type="text/css">
   .MathJax_Preview .MJXf-math {color: inherit!important}
  </style>
  <style type="text/css">
   .MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
  </style>
  <style type="text/css">
   #MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
  </style>
  <style type="text/css">
   .MathJax_Preview {color: #888; display: contents}
#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
  </style>
  <script src="https://mathjax.codeforces.org/jax/output/HTML-CSS/fonts/TeX/fontdata.js?V=2.7.9" type="text/javascript">
  </script>
  <style type="text/css">
   .MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover, .MJXp-munder {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > *, .MJXp-munder > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
  </style>
 </head>
 <body class="">
  <div id="MathJax_Message" style="">
   Loading [MathJax]/jax/output/HTML-CSS/fonts/TeX/fontdata.js
  </div>
  <span class="csrf-token" data-csrf="f74f2aa5e578c2fd20fb35fde60d1cbd" style="display:none;">
  </span>
  <!-- .notificationTextCleaner used in Codeforces.showAnnouncements() -->
  <div class="notificationTextCleaner" style="font-size: 0">
  </div>
  <div class="button-up" style="display: none; opacity: 0.7; width: 30px; height: 100%; position: fixed; left: 0px; top: 0px; cursor: pointer; text-align: center; line-height: 30px; color: rgb(211, 219, 228); font-weight: bold; font-size: 20px;">
   <i class="icon-circle-arrow-up">
   </i>
  </div>
  <div class="verdictPrototypeDiv" style="display: none;">
  </div>
  <!-- Codeforces JavaScripts. -->
  <script type="text/javascript">
   String.prototype.hashCode = function() {
        var hash = 0, i, chr;
        if (this.length === 0) return hash;
        for (i = 0; i < this.length; i++) {
            chr   = this.charCodeAt(i);
            hash  = ((hash << 5) - hash) + chr;
            hash |= 0; // Convert to 32bit integer
        }
        return hash;
    };

    var queryMobile = Codeforces.queryString.mobile;
    if (queryMobile === "true" || queryMobile === "false") {
        Codeforces.putToStorage("useMobile", queryMobile === "true");
    } else {
        var useMobile = Codeforces.getFromStorage("useMobile");
        if (useMobile === true || useMobile === false) {
            if (useMobile != false) {
                Codeforces.redirect(Codeforces.updateUrlParameter(document.location.href, "mobile", useMobile));
            }
        }
    }
  </script>
  <script type="text/javascript">
   if (window.parent.frames.length > 0) {
        window.stop();
    }
  </script>
  <script type="text/javascript">
   $(document).ready(function () {
    (function () {
        jQuery.expr[':'].containsCI = function(elem, index, match) {
            return !match || !match.length || match.length < 4 || !match[3] || (
                    elem.textContent || elem.innerText || jQuery(elem).text() || ''
            ).toLowerCase().indexOf(match[3].toLowerCase()) >= 0;
        }
    }(jQuery));

    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.getCodeforcesServerTime = function(callback) {
        $.post("/data/time", {}, callback, "json");
    }

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    setTimeout(function() {
        $(".second-level-menu-list").lavaLamp({
            fx: "backout",
            speed: 700
        });
    }, 100);


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();

        var count = 0;

        function getDelay() {
            var delay = 0;
            var last = Codeforces.getFromStorage("LastOnlineTimeUpdaterMillis", 0);
            if (last && last != null) {
                var period = count < 20 ? 360 * 1000 : 600 * 1000;
                delay = period - (new Date().getTime() - last);
                if (delay < 0)
                    delay = 0;
            }
            return delay;
        }

        window.setInterval(function () {
            if (getDelay() <= 0 && count < 120) {
                ++count;
                Codeforces.ping("/data/update-online");
            }
        }, 5000);

        var handle = "rythmtheif";
        $("a.rated-user:contains(" + handle + "), span.participant:contains(" + handle + ")").each(function () {
            if ($(this).text() == handle) {
                var td = $(this).parent();
                var tr = $(this).parent().parent();
                if (td.is("td") && tr.is("tr") && !tr.hasClass("disable-highlight-self")) {
                    info(handle);
                    tr.addClass("highlighted-row");
                }
            }
        });

    function showAnnouncements(json) {
        //info("j=" + JSON.stringify(json));

        if (json.t != "a") {
            return;
        }

        setTimeout(function() {
            Codeforces.showAnnouncements(json.d, "en");
        }, Math.random() * 500);
    }

    function showEventCatcherUserMessage(json) {
        if (json.t == "s") {
            var points = json.d[5];
            var passedTestCount = json.d[7];
            var judgedTestCount = json.d[8];
            var verdict = preparedVerdictFormats[json.d[12]];
            var verdictPrototypeDiv = $(".verdictPrototypeDiv");
            verdictPrototypeDiv.html(verdict);
            if (judgedTestCount != null && judgedTestCount != undefined) {
                verdictPrototypeDiv.find(".verdict-format-judged").text(judgedTestCount);
            }
            if (passedTestCount != null && passedTestCount != undefined) {
                verdictPrototypeDiv.find(".verdict-format-passed").text(passedTestCount);
            }
            if (points != null && points != undefined) {
                verdictPrototypeDiv.find(".verdict-format-points").text(points);
            }
            Codeforces.showMessage(verdictPrototypeDiv.text());
        }
    }

    $(".clickable-title").each(function() {
        var title = $(this).attr("data-title");
        if (title) {
            var tmp = document.createElement("DIV");
            tmp.innerHTML = title;
            $(this).attr("title", tmp.textContent || tmp.innerText || "");
        }
    });

    $(".clickable-title").click(function() {
        var title = $(this).attr("data-title");
        if (title) {
            Codeforces.alert(title);
        } else {
            Codeforces.alert($(this).attr("title"));
        }
    }).css("position", "relative").css("bottom", "3px");

        Codeforces.showDelayedMessage();

    Codeforces.reformatTimes();

    //Codeforces.initializePubSub();
    if (window.codeforcesOptions.subscribeServerUrl) {
        window.eventCatcher = new EventCatcher(
            window.codeforcesOptions.subscribeServerUrl,
            [
                Codeforces.getGlobalChannel(),
                Codeforces.getUserChannel(),
                Codeforces.getUserShowMessageChannel(),
                Codeforces.getContestChannel(),
                Codeforces.getParticipantChannel(),
                Codeforces.getTalkChannel()
            ]
        );

        if (Codeforces.getParticipantChannel()) {
            window.eventCatcher.subscribe(Codeforces.getParticipantChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getContestChannel()) {
            window.eventCatcher.subscribe(Codeforces.getContestChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getGlobalChannel()) {
            window.eventCatcher.subscribe(Codeforces.getGlobalChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getUserChannel()) {
            window.eventCatcher.subscribe(Codeforces.getUserChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getUserShowMessageChannel()) {
            window.eventCatcher.subscribe(Codeforces.getUserShowMessageChannel(), function(json) {
                showEventCatcherUserMessage(json);
            });
        }
    }

    Codeforces.setupContestTimes("/data/contests");
    Codeforces.setupSpoilers();
    Codeforces.setupTutorials("/data/problemTutorial");
        });
  </script>
  <div id="body">
   <script type="text/javascript">
    $(function() {
                window._ftaa = "179dmr1i7lzb0bzz7f";
            })
   </script>
   <script type="text/javascript">
    $(function() {
                window._bfaa = "d063bd48f9677b77e8fb6bc7b20bc61f";
            });
   </script>
   <script type="application/javascript">
    window.setTimeout(function () {
                    var url = location.href;
                    var hashCode32 = Math.abs(url.hashCode()).toString();
                    var hashCode = "p" + hashCode32 + Math.abs((hashCode32 + url).hashCode());
                    var pvs = Codeforces.getFromStorage("pvs" + hashCode);
                    if (!pvs) {
                        $.post("/data/apv", {
                            ftaa: window._ftaa,
                            bfaa: window._bfaa,
                            url: url
                        }, function (json) {
                            if (json["success"] === "true") {
                                Codeforces.putToStorage("pvs" + hashCode, true);
                            }
                        }, "json");
                    }
                }, 5000);
   </script>
   <div class="side-bell" style="visibility: hidden; display: none; opacity: 0.7; width: 30px; position: fixed; right: 0px; top: 0px; cursor: pointer; text-align: center; line-height: 30px; color: rgb(211, 219, 228); font-weight: bold; font-size: 10px;">
    <span class="icon-stack" style="width: 100%;">
     <i class="icon-circle icon-stack-base">
     </i>
     <i class="icon-bell-alt icon-light">
     </i>
    </span>
    <br/>
    <span class="side-bell__count" style="position: relative; top: -10px;">
    </span>
   </div>
   <style>
    .header-bell {
        display: inline-block;
        position: relative;
        cursor: pointer;
    }

    .header-bell__img {
        opacity: 0.5;
        background-image: url("//codeforces.org/s/66284/images/icons/bell_inactive-20x20.png");
        position: relative;
        bottom: 1px;
        width: 20px;
        height: 20px;
    }

    .header-bell__img-active  {
        opacity: 1 !important;
        background-image: url("//codeforces.org/s/66284/images/icons/bell_active-20x20.png") !important;
    }

    .header-bell__count {
        position: absolute;
        top: 8px;
        left: 18px;
        font-weight: bold;
        font-size: 10px;
    }

    .bell-details {
        display: none;
        z-index: 5;
        border: 1px solid rgb(185, 185, 185);
        width: 40rem;
        max-height: 60rem;
        padding: 0;
        position: absolute;
        top: 20px;
        right: 0;
        background-color: white;
        overflow: scroll;
        overflow-x: hidden;
        overflow-y: auto;
    }
    .bell-details.sidebar-bell {
        position: fixed;
        right: 50px;
    }

    .bell-details__no-new {
        font-size: 1.3rem;
        display: block;
        text-align: center;
        color: #888 !important;
        padding: 1em;
    }

    .bell-details__recent-link {
        margin: 0;
        padding: 0.5em;
        text-align: center;
        border-top: 1px solid rgb(185, 185, 185);
    }

    .bell-details__recent-link a {
        font-size: 1.2rem;
    }

    .bell-details__proto-row-comment {
        display: none;
    }

    .bell-details__proto-row-blog-entry {
        display: none;
    }

    .bell-details__proto-row-comment-reply {
        display: none;
    }

    .bell-details__row {
        text-align: left;
        margin: 0.5em;
        padding: 0.25em 0.25em 0.75em 0.25em;
        clear: both;
    }

    .bell-details__row:hover {
        cursor: pointer;
        background-color: #def;
    }

    .bell-details__row-active {
        background-color: #def;
    }

    .bell-details__thumbnail-a {
        text-decoration: none;
    }

    .bell-details__row img {
        zoom: 50%;
        margin-right: 2em;
        float: left;
    }

    .bell-details__comment {
        padding-left: 45px;
        font-size: 1.3rem;
    }

    .bell-details__blog-entry {
        padding-left: 45px;
        font-size: 1.3rem;
    }

    .bell-details__comment-reply {
        padding-left: 45px;
        font-size: 1.3rem;
    }

    .bell-details__time {
        padding-left: 45px;
        margin-top: 0.2em;
        font-size: 1.1rem;
        color: #888 !important;
    }
   </style>
   <script>
    $(function () {
        if ($(window).width() < 1600) {
            $('.side-bell').css('width', '30px').css('line-height', '30px').css('font-size', '10px');
        }

        if ($(window).width() >= 1200) {
            $ (window).scroll (function () {
                if ($ (this).scrollTop () > 100) {
                    $(".bell-details").addClass("sidebar-bell");
                    $ ('.side-bell').fadeIn();
                } else {
                    $(".bell-details").removeClass("sidebar-bell");
                    $ ('.side-bell').fadeOut();
                }
            });

            $('.side-bell').hover(function () {
                $(this).animate({
                    'opacity':'1'
                }).css({'color':'#6a86a4'});
            }, function () {
                $(this).animate({
                    'opacity':'0.7'
                }).css({'color':'#d3dbe4'});
            });
        }

        $(".lang-chooser>div:first-child").prepend($("<span style='position: relative; bottom: 8px; padding: 0 0.5em;'>|</span>")).prepend($(".header-bell").show());
        function Bell() {
            var bell = this;
            var notifications = JSON.parse("[]");

            bell.notifications = {};

            for (var i in notifications) {
                if (notifications.hasOwnProperty(i)) {
                    bell.notifications[notifications[i].id] = notifications[i];
                }
            }

            function onClick(notification) {
                var notificationIds = [];
                var reason = notification.data.reasonType + "#" + notification.reasonId;
                for (id in bell.notifications) {
                    if (bell.notifications.hasOwnProperty(id)) {
                        var otherNotification = bell.notifications[id];
                        var otherReason = otherNotification.data.reasonType + "#" + otherNotification.reasonId;
                        if (otherReason == reason) {
                            notificationIds.push(otherNotification.id);
                        }
                    }
                }
                $.post("/data/notification", {action: "markAsRead", notificationIds: notificationIds.join(",")}, function(result) {
                    Codeforces.redirect(notification.data.url);
                }, "json");
            }

            var $bellDetails = $(".bell-details");
            bell.newCommentRow = function (notification) {
                var row = $(".bell-details__proto-row-comment").clone();
                row.addClass("bell-details__row").attr("data-notificationId", notification.id);
                row.find(".bell-details__thumbnail-a").attr("href", notification.data.reasonUserUrl);
                row.find("img").attr("src", notification.data.reasonUserThumbnailUrl);
                row.find(".bell-details__comment").html(
                        "ReasonUser mentioned you in a comment".replace("ReasonUser", notification.data.reasonUserHtml)
                );
                row.find(".bell-details__time").html(
                        "<span class='format-systemtimewithseconds'>"
                        + notification.creationTimeString
                        + "</span>"
                );
                row.removeClass("bell-details__proto-row-comment");
                row.click(function() {
                    onClick(notification);
                    return false;
                });
                return row;
            };
            bell.newFriendCommentRow = function (notification) {
                var row = $(".bell-details__proto-row-comment").clone();
                row.addClass("bell-details__row").attr("data-notificationId", notification.id);
                row.find(".bell-details__thumbnail-a").attr("href", notification.data.reasonUserUrl);
                row.find("img").attr("src", notification.data.reasonUserThumbnailUrl);
                row.find(".bell-details__comment").html(
                        "ReasonUser wrote a comment".replace("ReasonUser", notification.data.reasonUserHtml)
                );
                row.find(".bell-details__time").html(
                        "<span class='format-systemtimewithseconds'>"
                        + notification.creationTimeString
                        + "</span>"
                );
                row.removeClass("bell-details__proto-row-comment");
                row.click(function() {
                    onClick(notification);
                    return false;
                });
                return row;
            };
            bell.newCommentReplyRow = function (notification) {
                var row = $(".bell-details__proto-row-comment-reply").clone();
                row.addClass("bell-details__row").attr("data-notificationId", notification.id);
                row.find(".bell-details__thumbnail-a").attr("href", notification.data.reasonUserUrl);
                row.find("img").attr("src", notification.data.reasonUserThumbnailUrl);
                row.find(".bell-details__comment-reply").html(
                        "ReasonUser replied to your comment".replace("ReasonUser", notification.data.reasonUserHtml)
                );
                row.find(".bell-details__time").html(
                        "<span class='format-systemtimewithseconds'>"
                        + notification.creationTimeString
                        + "</span>"
                );
                row.removeClass("bell-details__proto-row-comment-reply");
                row.click(function() {
                    onClick(notification);
                    return false;
                });
                return row;
            };
            bell.newBlogEntryRow = function (notification) {
                var row = $(".bell-details__proto-row-blog-entry").clone();
                row.addClass("bell-details__row").attr("data-notificationId", notification.id);
                row.find(".bell-details__thumbnail-a").attr("href", notification.data.reasonUserUrl);
                row.find("img").attr("src", notification.data.reasonUserThumbnailUrl);
                row.find(".bell-details__blog-entry").html(
                        "ReasonUser mentioned you in a blog entry".replace("ReasonUser", notification.data.reasonUserHtml)
                );
                row.find(".bell-details__time").html(
                        "<span class='format-systemtimewithseconds'>"
                        + notification.creationTimeString
                        + "</span>"
                );
                row.removeClass("bell-details__proto-row-blog-entry");
                row.click(function() {
                    onClick(notification);
                    return false;
                });
                return row;
            };
            bell.newFriendBlogEntryRow = function (notification) {
                var row = $(".bell-details__proto-row-blog-entry").clone();
                row.addClass("bell-details__row").attr("data-notificationId", notification.id);
                row.find(".bell-details__thumbnail-a").attr("href", notification.data.reasonUserUrl);
                row.find("img").attr("src", notification.data.reasonUserThumbnailUrl);
                row.find(".bell-details__blog-entry").html(
                        "ReasonUser wrote a blog entry".replace("ReasonUser", notification.data.reasonUserHtml)
                );
                row.find(".bell-details__time").html(
                        "<span class='format-systemtimewithseconds'>"
                        + notification.creationTimeString
                        + "</span>"
                );
                row.removeClass("bell-details__proto-row-blog-entry");
                row.click(function() {
                    onClick(notification);
                    return false;
                });
                return row;
            };
            bell.newProposalCommentRow = function (notification) {
                var row = $(".bell-details__proto-row-comment-reply").clone();
                row.addClass("bell-details__row").attr("data-notificationId", notification.id);
                row.find(".bell-details__thumbnail-a").attr("href", notification.data.reasonUserUrl);
                row.find("img").attr("src", notification.data.reasonUserThumbnailUrl);
                row.find(".bell-details__comment-reply").html(
                        "ReasonUser commented on ProposalType Proposal".replace("ReasonUser", notification.data.reasonUserHtml)
                                .replace("ProposalType", "Contest" == notification.data.proposalType ? "contest proposal" : "problem proposal")
                                .replace("Proposal", $("<div/>").text(notification.data.proposalName).html())
                );
                row.find(".bell-details__time").html(
                        "<span class='format-systemtimewithseconds'>"
                        + notification.creationTimeString
                        + "</span>"
                );
                row.removeClass("bell-details__proto-row-comment-reply");
                row.click(function() {
                    onClick(notification);
                    return false;
                });
                return row;
            };

            bell.renderRow = function (notification) {
                var $row = $(".bell-details__row[data-notificationId='" + notification.id + "']");

                if ($bellDetails.css("display") != "block" && notification.read) {
                    $row.hide();
                    return;
                }

                notification.data = JSON.parse(notification.dataJson);

                var reason = notification.data.reasonType + "#" + notification.reasonId;

                var has = false;
                $row.each(function () {
                    has = true;
                });
                if ($(".bell-details__row[data-reason='" + reason + "']").length) {
                    has = true;
                }

                if (!has) {
                    $(".side-bell").css("visibility", "visible");
                    var newRow;
                    if (notification.type == "Comment") {
                        newRow = bell.newCommentRow(notification);
                    } else if (notification.type == "BlogEntry") {
                        newRow = bell.newBlogEntryRow(notification);
                    } else if (notification.type == "CommentReply") {
                        newRow = bell.newCommentReplyRow(notification);
                    } else if (notification.type == "FriendComment") {
                        newRow = bell.newFriendCommentRow(notification);
                    } else if (notification.type == "FriendBlogEntry") {
                        newRow = bell.newFriendBlogEntryRow(notification);
                    } else if (notification.type == "ProposalComment") {
                        newRow = bell.newProposalCommentRow(notification)
                    }
                    if (newRow) {
                        newRow.attr("data-reason", reason);
                        $(".bell-details").prepend(newRow);
                    }
                }
            };

            var $count = $(".header-bell__count, .side-bell__count");
            var $img = $(".header-bell__img");
            var $noNew = $(".bell-details__no-new");

            bell.renewCount = function () {
                Codeforces.reformatTimes();
                var count = 0;
                var counted = {};
                for (var id in bell.notifications)
                    if (bell.notifications.hasOwnProperty(id)) {
                        var notification = bell.notifications[id];
                        if (notification) {
                            var reason = notification.data.reasonType + "#" + notification.reasonId;
                            if (!notification.read && !counted[reason]) {
                                count++;
                                counted[reason] = true;
                            }
                        }
                    }
                if (count > 0) {
                    $count.text(count);
                    $img.addClass("header-bell__img-active");
                    $noNew.hide();
                } else {
                    $count.text("");
                    $img.removeClass("header-bell__img-active");
                    if ($bellDetails.css("display") != "block") {
                        $noNew.show();
                    }
                }
            };

            for (var id in bell.notifications)
                if (bell.notifications.hasOwnProperty(id))
                    bell.renderRow(bell.notifications[id]);

            if (window.eventCatcher) {
                window.eventCatcher.subscribe(Codeforces.getUserChannel(), function(json) {
                    if (json.t === "n") {
                        for (var i in json.d)
                            if (json.d.hasOwnProperty(i)) {
                                var notification = json.d[i];
                                notification.data = JSON.parse(notification.dataJson);
                                bell.notifications[notification.id] = notification;
                                bell.renderRow(notification);
                                bell.renewCount();
                            }
                    }
                });
            }


            $(".header-bell, .side-bell").click(function() {
                if ($bellDetails.css("display") == "none") {
                    for (var id in bell.notifications)
                        if (bell.notifications.hasOwnProperty(id))
                            if (bell.notifications[id].read)
                                bell.renderRow(bell.notifications[id]);
                    bell.renewCount();

                    $bellDetails.css("display", "block");

                    var notificationIds = [];
                    for (id in bell.notifications)
                        if (bell.notifications.hasOwnProperty(id))
                            notificationIds.push(id);

                    setTimeout(function() {
                        if ($bellDetails.css("display") == "block") {
                            $.post("/data/notification", {action: "markAsRead", notificationIds: notificationIds.join(",")}, function(result) {
                                // No operations.
                            }, "json");

                            for (var i in notificationIds) {
                                if (notificationIds.hasOwnProperty(i)) {
                                    bell.notifications[notificationIds[i]].read = true;
                                }
                            }
                            bell.renewCount();
                        }
                    }, 2000);
                } else {
                    var has = false;
                    for (var id in bell.notifications) {
                        if (bell.notifications.hasOwnProperty(id) && !bell.notifications[id].read) {
                            has = true;
                        }
                    }
                    if (!has) {
                        $(".side-bell").css("visibility", "hidden");
                    }
                    $bellDetails.css("display", "none");
                    bell.renewCount();
                }
            });
        }

        bell = new Bell();
        bell.renewCount();
    })
   </script>
   <div id="header" style="position: relative;">
    <div style="float:left; max-height: 60px;">
     <a href="/">
      <img alt="Codeforces" height="65" src="//codeforces.org/s/66284/images/codeforces-sponsored-by-ton.png" style="height: 65px;" title="Codeforces"/>
     </a>
    </div>
    <div class="lang-chooser">
     <div style="text-align: right;">
      <div class="header-bell" style="">
       <div class="header-bell__img">
        <span class="header-bell__count">
        </span>
       </div>
       <div class="bell-details">
        <div class="bell-details__proto-row-comment">
         <a class="bell-details__thumbnail-a" href="#">
          <img src=""/>
         </a>
         <div class="bell-details__comment">
         </div>
         <div class="bell-details__time">
         </div>
        </div>
        <div class="bell-details__proto-row-blog-entry">
         <a class="bell-details__thumbnail-a" href="#">
          <img src=""/>
         </a>
         <div class="bell-details__blog-entry">
         </div>
         <div class="bell-details__time">
         </div>
        </div>
        <div class="bell-details__proto-row-comment-reply">
         <a class="bell-details__thumbnail-a" href="#">
          <img src=""/>
         </a>
         <div class="bell-details__comment-reply">
         </div>
        </div>
        <div class="bell-details__no-new">
         There are no new notifications
        </div>
        <div class="bell-details__recent-link">
         <a href="/notifications">
          History (at most 100 notifications)
         </a>
        </div>
       </div>
      </div>
      <span style="position: relative; bottom: 8px; padding: 0 0.5em;">
       |
      </span>
      <a href="?locale=en">
       <img alt="In English" src="//codeforces.org/s/66284/images/flags/24/gb.png" title="In English"/>
      </a>
      <a href="?locale=ru">
       <img alt="По-русски" src="//codeforces.org/s/66284/images/flags/24/ru.png" title="По-русски"/>
      </a>
     </div>
     <div>
      <a href="/profile/rythmtheif">
       rythmtheif
      </a>
      |
      <a href="/d78a82a1f7ad1d30af04fdbc78e07ded/logout">
       Logout
      </a>
     </div>
     <div style="background-color: #EAF4FF; padding: 1px 3px; font-size: 1.1rem; margin-top: 3px">
      <img src="//codeforces.org/s/66284/images/icons/mail-16x16.png" style=""/>
      <span style="position: relative; bottom: 3px;">
       You have
       <b>
        <a href="/bestRatingChanges/15600700">
         +357! Wow!
        </a>
       </b>
      </span>
     </div>
    </div>
    <br style="clear: both;"/>
   </div>
   <div class="roundbox menu-box borderTopRound borderBottomRound" style="">
    <div class="menu-list-container">
     <ul class="menu-list main-menu-list">
      <li class="">
       <a href="/">
        Home
       </a>
      </li>
      <li class="">
       <a href="/top">
        Top
       </a>
      </li>
      <li class="">
       <a href="/catalog">
        Catalog
       </a>
      </li>
      <li class="current">
       <a href="/contests">
        Contests
       </a>
      </li>
      <li class="">
       <a href="/gyms">
        Gym
       </a>
      </li>
      <li class="">
       <a href="/problemset">
        Problemset
       </a>
      </li>
      <li class="">
       <a href="/groups/my">
        Groups
       </a>
      </li>
      <li class="">
       <a href="/ratings">
        Rating
       </a>
      </li>
      <li class="">
       <a href="/edu/courses">
        <span class="edu-menu-item">
         Edu
        </span>
       </a>
      </li>
      <li class="">
       <a href="/apiHelp">
        API
       </a>
      </li>
      <li class="">
       <a href="/calendar">
        Calendar
       </a>
      </li>
      <li class="">
       <a href="/help">
        Help
       </a>
      </li>
     </ul>
     <form action="/search" method="post">
      <input name="csrf_token" type="hidden" value="f74f2aa5e578c2fd20fb35fde60d1cbd"/>
      <input class="search" data-isplaceholder="true" name="query" value=""/>
      <input name="_tta" type="hidden" value="546"/>
     </form>
     <br style="clear: both;"/>
    </div>
   </div>
   <script type="text/javascript">
    $(document).ready(function () {
            $("input.search").focus(function () {
                if ($(this).attr("data-isPlaceholder") === "true") {
                    $(this).val("");
                    $(this).removeAttr("data-isPlaceholder");
                }
            });
        });
   </script>
   <br style="height: 3em; clear: both;"/>
   <div style="position: relative;">
    <div id="pageContent">
     <div class="second-level-menu">
      <ul class="second-level-menu-list">
       <li class="backLava" style="position: absolute; display: block; margin: 0px; padding: 0px; left: 305.156px; top: 0px; width: 62px; height: 20px;">
        <div class="leftLava">
        </div>
        <div class="bottomLava">
        </div>
        <div class="cornerLava">
        </div>
       </li>
       <li>
        <a href="/contest/2018">
         Problems
        </a>
       </li>
       <li>
        <a href="/contest/2018/submit">
         Submit Code
        </a>
       </li>
       <li>
        <a href="/contest/2018/my">
         My Submissions
        </a>
       </li>
       <li class="current selectedLava">
        <a href="/contest/2018/status">
         Status
        </a>
       </li>
       <li>
        <a href="/contest/2018/hacks">
         Hacks
        </a>
       </li>
       <li>
        <a href="/contest/2018/room/0">
         Room
        </a>
       </li>
       <li>
        <a href="/contest/2018/standings">
         Standings
        </a>
       </li>
       <li>
        <a href="/contest/2018/customtest">
         Custom Invocation
        </a>
       </li>
      </ul>
     </div>
     <style>
      .diagnosticsResultMessage {
            font-weight: bold;
            margin: 1em 0 0;
        }

        .diagnosticsResultMessage .diagnosticsMessageType {
            color: #E65100;
        }

        .source-copier {
            font-size: 1.2rem;
            float: right;
            color: #888 !important;
            cursor: pointer;
            border: 1px solid rgb(185, 185, 185);
            padding: 3px;
            margin: 1px;
            margin-right: 3px;
            line-height: 1.1rem;
            text-transform: none;
        }

        .source-copier:hover {
            background-color: #def;
        }
     </style>
     <div class="datatable" style="background-color: #E1E1E1; padding-bottom: 3px;">
      <div class="lt">
      </div>
      <div class="rt">
      </div>
      <div class="lb">
      </div>
      <div class="rb">
      </div>
      <div style="padding: 4px 0 0 6px;font-size:1.4rem;position:relative;">
       General
       <div style="position:absolute;right:0.25em;top:0.35em;">
        <span class="rowCount" style="padding:0;position:relative;bottom:2px;">
        </span>
        <img class="closed" src="//codeforces.org/s/66284/images/icons/control.png"/>
        <span class="filter" style="display:none;">
         <img class="opened" src="//codeforces.org/s/66284/images/icons/control-270.png"/>
         <input style="padding:0 0 0 20px;position:relative;bottom:2px;border:1px solid #aaa;height:17px;font-size:1.3rem;"/>
        </span>
       </div>
      </div>
      <div style="background-color: white;margin:0.3em 3px 0 3px;position:relative;">
       <div class="ilt">
       </div>
       <div class="irt">
       </div>
       <table class="">
        <tbody>
         <tr>
          <th class="top left" style="width:2em;">
           #
          </th>
          <th class="top" style="width:12em;">
           Author
          </th>
          <th class="top" style="width:2em;">
           Problem
          </th>
          <th class="top" style="width:2em;">
           Lang
          </th>
          <th class="top" style="width:8em;">
           Verdict
          </th>
          <th class="top" style="width:2em;">
           Time
          </th>
          <th class="top" style="width:2em;">
           Memory
          </th>
          <th class="top" style="width:4em;">
           Sent
          </th>
          <th class="top" style="width:4em;">
           Judged
          </th>
          <th class="top" style="width:4em;">
          </th>
          <th class="top right" style="width:4em;">
          </th>
         </tr>
         <tr>
          <td class="bottom dark left">
           285418011
          </td>
          <td class="bottom dark">
           Practice:
           <br/>
           <a class="rated-user user-legendary" href="/profile/orzdevinwang" title="Legendary Grandmaster orzdevinwang">
            <span class="legendary-user-first-letter">
             o
            </span>
            rzdevinwang
           </a>
          </td>
          <td class="bottom dark">
           <a href="/contest/2018/problem/F3" title="F3 - Speedbreaker Counting (Hard Version)">
            2018F3
           </a>
           -
           <span title="problem revision">
            14
           </span>
          </td>
          <td class="bottom dark">
           C++20 (GCC 13-64)
          </td>
          <td class="bottom dark">
           <span class="verdict-accepted">
            Accepted
           </span>
          </td>
          <td class="bottom dark">
           62 ms
          </td>
          <td class="bottom dark">
           148 KB
          </td>
          <td class="bottom dark">
           2024-10-12 10:08:09
          </td>
          <td class="bottom dark">
           2024-10-12 10:08:10
          </td>
          <td class="bottom dark">
           <span>
            <img alt="Add to favourites" class="toggle-favourite add-favourite" data-entityid="285418011" data-size="24" data-type="SUBMISSION" src="//codeforces.org/s/66284/images/icons/star_gray_24.png" style="cursor: pointer" title="Add to favourites"/>
           </span>
           <script type="text/javascript">
            $(document).ready(function () {
            $("img.toggle-favourite").click(function () {
                var size = $(this).attr("data-size");
                var img = $(this);

                var isFavourite = !img.hasClass("remove-favourite");
                var type = img.attr("data-type");
                var entityId = img.attr("data-entityId");

                $.post("/data/favourite",
                        { entityId: entityId, type: type, isFavourite: isFavourite },
                        function(response) {
                            if (response["success"] != "true") {
                                alert(response["message"]);
                            } else {
                                if (img.hasClass("remove-favourite")) {
                                    img.attr("src", "//codeforces.org/s/66284/images/icons/star_gray_" + size + ".png");
                                    img.removeClass("remove-favourite");
                                    img.addClass("add-favourite");
                                } else {
                                    img.attr("src", "//codeforces.org/s/66284/images/icons/star_yellow_" + size + ".png");
                                    img.removeClass("add-favourite");
                                    img.addClass("remove-favourite");
                                }
                            }
                        }, "json"
                );

                return false;
            });
        });
           </script>
          </td>
          <td class="bottom dark right">
           <button class="showDiff" style="padding: 0.05em; width: 80px;" title="Compare">
            Compare
           </button>
          </td>
         </tr>
        </tbody>
       </table>
      </div>
     </div>
     <script type="text/javascript">
      $(document).ready(function () {
                // Create new ':containsIgnoreCase' selector for search
                jQuery.expr[':'].containsIgnoreCase = function(a, i, m) {
                    return jQuery(a).text().toUpperCase()
                            .indexOf(m[3].toUpperCase()) >= 0;
                };

                if (window.updateDatatableFilter == undefined) {
                    window.updateDatatableFilter = function(i) {
                        var parent = $(i).parent().parent().parent().parent();
                        $("tr.no-items", parent).remove();
                        $("tr", parent).hide().removeClass('visible');
                        var text = $(i).val();
                        if (text) {
                            $("tr" + ":containsIgnoreCase('" + text + "')", parent).show().addClass('visible');
                        } else {
                            parent.find(".rowCount").text("");
                            $("tr", parent).show().addClass('visible');
                        }

                        var found = false;
                        var visibleRowCount = 0;
                        $("tr", parent).each(function () {
                            if (!found) {
                                if ($(this).find("th").size() > 0) {
                                    $(this).show().addClass('visible');
                                    found = true;
                                }
                            }
                            if ($(this).hasClass('visible')) {
                                visibleRowCount++;
                            }
                        });
                        if (text) {
                            parent.find(".rowCount").text("Matches: " + (visibleRowCount - (found ? 1 : 0)));
                        }
                        if (visibleRowCount == (found ? 1 : 0)) {
                            $("<tr class='no-items visible'><td style=\"text-align:left;\"colspan=\"32\">No items<\/td><\/tr>").appendTo($(parent).find('table'));
                        }
                        $(parent).find("tr td").removeClass("dark");
                        $(parent).find("tr.visible:odd td").addClass("dark");
                    }

                    $(".datatable .closed").click(function () {
                        var parent = $(this).parent();
                        $(this).hide();
                        $(".filter", parent).fadeIn(function () {
                            $("input", parent).val("").focus().css("border", "1px solid #aaa");
                        });
                    });

                    $(".datatable .opened").click(function () {
                        var parent = $(this).parent().parent();
                        $(".filter", parent).fadeOut(function () {
                            $(".closed", parent).show();
                            $("input", parent).val("").each(function () {
                                window.updateDatatableFilter(this);
                            });
                        });
                    });

                    $(".datatable .filter input").keyup(function(e) {
                        window.updateDatatableFilter(this);
                        e.preventDefault();
                        e.stopPropagation();
                    });

                    $(".datatable table").each(function () {
                        var found = false;
                        $("tr", this).each(function () {
                            if (!found && $(this).find("th").size() == 0) {
                                found = true;
                            }
                        });
                        if (!found) {
                            $("<tr class='no-items visible'><td style=\"text-align:left;\"colspan=\"32\">No items<\/td><\/tr>").appendTo(this);
                        }
                    });

                    // Applies styles to datatables.
                    $(".datatable").each(function () {
                        $(this).find("tr:first th").addClass("top");
                        $(this).find("tr:last td").addClass("bottom");
                        $(this).find("tr:odd td").addClass("dark");
                        $(this).find("tr td:first-child, tr th:first-child").addClass("left");
                        $(this).find("tr td:last-child, tr th:last-child").addClass("right");
                    });

                    $(".datatable table.tablesorter").each(function () {
                        $(this).bind("sortEnd", function () {
                            $(".datatable").each(function () {
                                $(this).find("th, td")
                                    .removeClass("top").removeClass("bottom")
                                    .removeClass("left").removeClass("right")
                                    .removeClass("dark");
                                $(this).find("tr:first th").addClass("top");
                                $(this).find("tr:last td").addClass("bottom");
                                $(this).find("tr:odd td").addClass("dark");
                                $(this).find("tr td:first-child, tr th:first-child").addClass("left");
                                $(this).find("tr td:last-child, tr th:last-child").addClass("right");
                            });
                        });
                    });
                }
        });
     </script>
     <div class="roundbox SubmissionDetailsFrameRoundBox-285418011 borderTopRound" style="margin-top:2em;font-size:1.1rem;">
      <div class="caption titled">
       → Source
       <div class="top-links">
       </div>
       <div class="source-copier" data-clipboard-target="#program-source-text" id="id005005897699875017" title="Copy">
        Copy
       </div>
      </div>
      <pre class="prettyprint lang-cpp linenums program-source prettyprinted" id="program-source-text" style="padding: 0.5em;"><ol class="linenums"><li class="L0"><span class="com">#include</span><span class="pun">&lt;</span><span class="pln">bits</span><span class="pun">/</span><span class="pln">stdc</span><span class="pun">++.</span><span class="pln">h</span><span class="pun">&gt;</span></li><li class="L1"><span class="com">#pragma</span><span class="pln"> GCC optimize</span><span class="pun">(</span><span class="str">"Ofast"</span><span class="pun">)</span></li><li class="L2"><span class="com">#pragma</span><span class="pln"> GCC optimize</span><span class="pun">(</span><span class="str">"unroll-loops"</span><span class="pun">)</span></li><li class="L3"><span class="pln"> </span></li><li class="L4"><span class="com">#define</span><span class="pln"> L</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> j</span><span class="pun">,</span><span class="pln"> k</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">for</span><span class="pun">(</span><span class="typ">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">j</span><span class="pun">);</span><span class="pln"> i </span><span class="pun">&lt;=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">k</span><span class="pun">);</span><span class="pln"> i</span><span class="pun">++)</span></li><li class="L5"><span class="com">#define</span><span class="pln"> R</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> j</span><span class="pun">,</span><span class="pln"> k</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">for</span><span class="pun">(</span><span class="typ">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">j</span><span class="pun">);</span><span class="pln"> i </span><span class="pun">&gt;=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">k</span><span class="pun">);</span><span class="pln"> i</span><span class="pun">--)</span></li><li class="L6"><span class="com">#define</span><span class="pln"> ll </span><span class="kwd">long</span><span class="pln"> </span><span class="kwd">long</span></li><li class="L7"><span class="com">#define</span><span class="pln"> pb emplace_back</span></li><li class="L8"><span class="com">#define</span><span class="pln"> ull </span><span class="kwd">unsigned</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> </span></li><li class="L9"><span class="com">#define</span><span class="pln"> sz</span><span class="pun">(</span><span class="pln">a</span><span class="pun">)</span><span class="pln"> </span><span class="pun">((</span><span class="typ">int</span><span class="pun">)</span><span class="pln"> a</span><span class="pun">.</span><span class="pln">size</span><span class="pun">())</span></li><li class="L0"><span class="com">#define</span><span class="pln"> vi </span><span class="typ">vector</span><span class="str">&lt;int&gt;</span></li><li class="L1"><span class="com">#define</span><span class="pln"> me</span><span class="pun">(</span><span class="pln">a</span><span class="pun">,</span><span class="pln"> x</span><span class="pun">)</span><span class="pln"> memset</span><span class="pun">(</span><span class="pln">a</span><span class="pun">,</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">sizeof</span><span class="pun">(</span><span class="pln">a</span><span class="pun">))</span></li><li class="L2"><span class="kwd">using</span><span class="pln"> </span><span class="kwd">namespace</span><span class="pln"> std</span><span class="pun">;</span></li><li class="L3"><span class="kwd">const</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> N </span><span class="pun">=</span><span class="pln"> </span><span class="lit">3007</span><span class="pun">;</span></li><li class="L4"><span class="typ">int</span><span class="pln"> mod</span><span class="pun">;</span></li><li class="L5"><span class="kwd">struct</span><span class="pln"> fastmod </span><span class="pun">{</span></li><li class="L6"><span class="pln">  </span><span class="kwd">typedef</span><span class="pln"> </span><span class="kwd">unsigned</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> u64</span><span class="pun">;</span></li><li class="L7"><span class="pln">  </span><span class="kwd">typedef</span><span class="pln"> </span><span class="typ">__uint128_t</span><span class="pln"> u128</span><span class="pun">;</span></li><li class="L8"><span class="pln"> </span></li><li class="L9"><span class="pln">  </span><span class="typ">int</span><span class="pln"> m</span><span class="pun">;</span></li><li class="L0"><span class="pln">  u64 b</span><span class="pun">;</span></li><li class="L1"><span class="pln"> </span></li><li class="L2"><span class="pln">  fastmod</span><span class="pun">(</span><span class="typ">int</span><span class="pln"> m</span><span class="pun">)</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> m</span><span class="pun">(</span><span class="pln">m</span><span class="pun">),</span><span class="pln"> b</span><span class="pun">(((</span><span class="pln">u128</span><span class="pun">)</span><span class="lit">1</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="lit">64</span><span class="pun">)</span><span class="pln"> </span><span class="pun">/</span><span class="pln"> m</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{}</span></li><li class="L3"><span class="pln">  </span><span class="typ">int</span><span class="pln"> reduce</span><span class="pun">(</span><span class="pln">u64 a</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li class="L4"><span class="pln">    u64 q </span><span class="pun">=</span><span class="pln"> </span><span class="pun">((</span><span class="pln">u128</span><span class="pun">)</span><span class="pln">a </span><span class="pun">*</span><span class="pln"> b</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&gt;&gt;</span><span class="pln"> </span><span class="lit">64</span><span class="pun">;</span></li><li class="L5"><span class="pln">    </span><span class="typ">int</span><span class="pln"> r </span><span class="pun">=</span><span class="pln"> a </span><span class="pun">-</span><span class="pln"> q </span><span class="pun">*</span><span class="pln"> m</span><span class="pun">;</span></li><li class="L6"><span class="pln">    </span><span class="kwd">return</span><span class="pln"> r </span><span class="pun">&lt;</span><span class="pln"> m </span><span class="pun">?</span><span class="pln"> r </span><span class="pun">:</span><span class="pln"> r </span><span class="pun">-</span><span class="pln"> m</span><span class="pun">;</span></li><li class="L7"><span class="pln">  </span><span class="pun">}</span></li><li class="L8"><span class="pun">}</span><span class="pln"> z</span><span class="pun">(</span><span class="lit">2</span><span class="pun">);</span></li><li class="L9"><span class="kwd">struct</span><span class="pln"> mint </span><span class="pun">{</span></li><li class="L0"><span class="pln">	</span><span class="typ">int</span><span class="pln"> x</span><span class="pun">;</span></li><li class="L1"><span class="pln">	</span><span class="kwd">inline</span><span class="pln"> mint</span><span class="pun">(</span><span class="typ">int</span><span class="pln"> o </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> o</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></li><li class="L2"><span class="pln">	</span><span class="kwd">inline</span><span class="pln"> mint </span><span class="pun">&amp;</span><span class="pln"> </span><span class="kwd">operator</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">int</span><span class="pln"> o</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> o</span><span class="pun">,</span><span class="pln"> </span><span class="pun">*</span><span class="kwd">this</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></li><li class="L3"><span class="pln">	</span><span class="kwd">inline</span><span class="pln"> mint </span><span class="pun">&amp;</span><span class="pln"> </span><span class="kwd">operator</span><span class="pln"> </span><span class="pun">+=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mint o</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span><span class="pln">x </span><span class="pun">+=</span><span class="pln"> o</span><span class="pun">.</span><span class="pln">x</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&gt;=</span><span class="pln"> mod </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">x </span><span class="pun">-=</span><span class="pln"> mod</span><span class="pun">),</span><span class="pln"> </span><span class="pun">*</span><span class="kwd">this</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></li><li class="L4"><span class="pln">	</span><span class="kwd">inline</span><span class="pln"> mint </span><span class="pun">&amp;</span><span class="pln"> </span><span class="kwd">operator</span><span class="pln"> </span><span class="pun">-=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mint o</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span><span class="pln">x </span><span class="pun">-=</span><span class="pln"> o</span><span class="pun">.</span><span class="pln">x</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">x </span><span class="pun">+=</span><span class="pln"> mod</span><span class="pun">),</span><span class="pln"> </span><span class="pun">*</span><span class="kwd">this</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></li><li class="L5"><span class="pln">	</span><span class="kwd">inline</span><span class="pln"> mint </span><span class="pun">&amp;</span><span class="pln"> </span><span class="kwd">operator</span><span class="pln"> </span><span class="pun">*=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mint o</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> z</span><span class="pun">.</span><span class="pln">reduce</span><span class="pun">((</span><span class="pln">ll</span><span class="pun">)</span><span class="pln"> x </span><span class="pun">*</span><span class="pln"> o</span><span class="pun">.</span><span class="pln">x</span><span class="pun">),</span><span class="pln"> </span><span class="pun">*</span><span class="kwd">this</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></li><li class="L6"><span class="pln">	</span><span class="kwd">inline</span><span class="pln"> mint </span><span class="pun">&amp;</span><span class="pln"> </span><span class="kwd">operator</span><span class="pln"> </span><span class="pun">^=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">int</span><span class="pln"> b</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li class="L7"><span class="pln">		mint w </span><span class="pun">=</span><span class="pln"> </span><span class="pun">*</span><span class="kwd">this</span><span class="pun">;</span></li><li class="L8"><span class="pln">		mint ret</span><span class="pun">(</span><span class="lit">1</span><span class="pun">);</span></li><li class="L9"><span class="pln">		</span><span class="kwd">for</span><span class="pun">(;</span><span class="pln"> b</span><span class="pun">;</span><span class="pln"> b </span><span class="pun">&gt;&gt;=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> w </span><span class="pun">*=</span><span class="pln"> w</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">b </span><span class="pun">&amp;</span><span class="pln"> </span><span class="lit">1</span><span class="pun">)</span><span class="pln"> ret </span><span class="pun">*=</span><span class="pln"> w</span><span class="pun">;</span></li><li class="L0"><span class="pln">		</span><span class="kwd">return</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> ret</span><span class="pun">.</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> </span><span class="pun">*</span><span class="kwd">this</span><span class="pun">;</span></li><li class="L1"><span class="pln">	</span><span class="pun">}</span></li><li class="L2"><span class="pln">	</span><span class="kwd">inline</span><span class="pln"> mint </span><span class="pun">&amp;</span><span class="pln"> </span><span class="kwd">operator</span><span class="pln"> </span><span class="pun">/=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mint o</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">*</span><span class="kwd">this</span><span class="pln"> </span><span class="pun">*=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">o </span><span class="pun">^=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mod </span><span class="pun">-</span><span class="pln"> </span><span class="lit">2</span><span class="pun">));</span><span class="pln"> </span><span class="pun">}</span></li><li class="L3"><span class="pln">	</span><span class="kwd">friend</span><span class="pln"> </span><span class="kwd">inline</span><span class="pln"> mint </span><span class="kwd">operator</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mint a</span><span class="pun">,</span><span class="pln"> mint b</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> a </span><span class="pun">+=</span><span class="pln"> b</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></li><li class="L4"><span class="pln">	</span><span class="kwd">friend</span><span class="pln"> </span><span class="kwd">inline</span><span class="pln"> mint </span><span class="kwd">operator</span><span class="pln"> </span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mint a</span><span class="pun">,</span><span class="pln"> mint b</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> a </span><span class="pun">-=</span><span class="pln"> b</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></li><li class="L5"><span class="pln">	</span><span class="kwd">friend</span><span class="pln"> </span><span class="kwd">inline</span><span class="pln"> mint </span><span class="kwd">operator</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mint a</span><span class="pun">,</span><span class="pln"> mint b</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> a </span><span class="pun">*=</span><span class="pln"> b</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></li><li class="L6"><span class="pln">	</span><span class="kwd">friend</span><span class="pln"> </span><span class="kwd">inline</span><span class="pln"> mint </span><span class="kwd">operator</span><span class="pln"> </span><span class="pun">/</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mint a</span><span class="pun">,</span><span class="pln"> mint b</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> a </span><span class="pun">/=</span><span class="pln"> b</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></li><li class="L7"><span class="pln">	</span><span class="kwd">friend</span><span class="pln"> </span><span class="kwd">inline</span><span class="pln"> mint </span><span class="kwd">operator</span><span class="pln"> </span><span class="pun">^</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mint a</span><span class="pun">,</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> b</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> a </span><span class="pun">^=</span><span class="pln"> b</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></li><li class="L8"><span class="pun">};</span></li><li class="L9"><span class="kwd">inline</span><span class="pln"> mint qpow</span><span class="pun">(</span><span class="pln">mint x</span><span class="pun">,</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> y </span><span class="pun">=</span><span class="pln"> mod </span><span class="pun">-</span><span class="pln"> </span><span class="lit">2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> x </span><span class="pun">^</span><span class="pln"> y</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></li><li class="L0"><span class="pln">mint fac</span><span class="pun">[</span><span class="pln">N</span><span class="pun">],</span><span class="pln"> ifac</span><span class="pun">[</span><span class="pln">N</span><span class="pun">],</span><span class="pln"> inv</span><span class="pun">[</span><span class="pln">N</span><span class="pun">];</span></li><li class="L1"><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">int</span><span class="pln"> x</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li class="L2"><span class="pln">	fac</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> ifac</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> inv</span><span class="pun">[</span><span class="lit">1</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span></li><li class="L3"><span class="pln">	L</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"> x</span><span class="pun">)</span><span class="pln"> inv</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mod </span><span class="pun">-</span><span class="pln"> mod </span><span class="pun">/</span><span class="pln"> i</span><span class="pun">)</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> inv</span><span class="pun">[</span><span class="pln">mod </span><span class="pun">%</span><span class="pln"> i</span><span class="pun">];</span></li><li class="L4"><span class="pln">	L</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> x</span><span class="pun">)</span><span class="pln"> fac</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> fac</span><span class="pun">[</span><span class="pln">i </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">]</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> i</span><span class="pun">,</span><span class="pln"> ifac</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> ifac</span><span class="pun">[</span><span class="pln">i </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">]</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> inv</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span></li><li class="L5"><span class="pun">}</span><span class="pln"> </span></li><li class="L6"><span class="pln">mint C</span><span class="pun">(</span><span class="typ">int</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> y</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li class="L7"><span class="pln">	</span><span class="kwd">return</span><span class="pln"> x </span><span class="pun">&lt;</span><span class="pln"> y </span><span class="pun">||</span><span class="pln"> y </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> fac</span><span class="pun">[</span><span class="pln">x</span><span class="pun">]</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> ifac</span><span class="pun">[</span><span class="pln">y</span><span class="pun">]</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> ifac</span><span class="pun">[</span><span class="pln">x </span><span class="pun">-</span><span class="pln"> y</span><span class="pun">];</span></li><li class="L8"><span class="pun">}</span></li><li class="L9"><span class="kwd">inline</span><span class="pln"> mint sgn</span><span class="pun">(</span><span class="typ">int</span><span class="pln"> x</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li class="L0"><span class="pln">	</span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span><span class="pln">x </span><span class="pun">&amp;</span><span class="pln"> </span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> mod </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span></li><li class="L1"><span class="pun">}</span></li><li class="L2"><span class="pln"> </span></li><li class="L3"><span class="typ">int</span><span class="pln"> n</span><span class="pun">;</span></li><li class="L4"><span class="pln">mint g</span><span class="pun">[</span><span class="pln">N</span><span class="pun">][</span><span class="lit">2</span><span class="pun">];</span></li><li class="L5"><span class="pln">mint val</span><span class="pun">[</span><span class="pln">N</span><span class="pun">];</span></li><li class="L6"><span class="kwd">void</span><span class="pln"> </span><span class="typ">Main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li class="L7"><span class="pln">	cin </span><span class="pun">&gt;&gt;</span><span class="pln"> n </span><span class="pun">&gt;&gt;</span><span class="pln"> mod</span><span class="pun">;</span></li><li class="L8"><span class="pln">	z </span><span class="pun">=</span><span class="pln"> fastmod</span><span class="pun">(</span><span class="pln">mod</span><span class="pun">);</span></li><li class="L9"><span class="pln">	init</span><span class="pun">(</span><span class="pln">n</span><span class="pun">);</span></li><li class="L0"><span class="pln">	L</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> n</span><span class="pun">)</span><span class="pln"> L</span><span class="pun">(</span><span class="pln">o</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">)</span><span class="pln"> g</span><span class="pun">[</span><span class="pln">i</span><span class="pun">][</span><span class="pln">o</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></li><li class="L1"><span class="pln">	g</span><span class="pun">[</span><span class="lit">0</span><span class="pun">][</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span></li><li class="L2"><span class="pln">	L</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> n</span><span class="pun">)</span><span class="pln"> </span></li><li class="L3"><span class="pln">		g</span><span class="pun">[</span><span class="pln">i</span><span class="pun">][</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> g</span><span class="pun">[</span><span class="pln">i </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">][</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> i </span><span class="pun">+</span><span class="pln"> g</span><span class="pun">[</span><span class="pln">i </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">][</span><span class="lit">1</span><span class="pun">],</span><span class="pln"> g</span><span class="pun">[</span><span class="pln">i</span><span class="pun">][</span><span class="lit">1</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">g</span><span class="pun">[</span><span class="pln">i </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">][</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> g</span><span class="pun">[</span><span class="pln">i </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">][</span><span class="lit">1</span><span class="pun">])</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> i</span><span class="pun">;</span></li><li class="L4"><span class="pln">	L</span><span class="pun">(</span><span class="pln">d</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> n </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li class="L5"><span class="pln">		</span><span class="typ">int</span><span class="pln"> len </span><span class="pun">=</span><span class="pln"> n </span><span class="pun">-</span><span class="pln"> d</span><span class="pun">;</span></li><li class="L6"><span class="pln">		mint sum </span><span class="pun">=</span><span class="pln"> g</span><span class="pun">[</span><span class="pln">d</span><span class="pun">][</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> g</span><span class="pun">[</span><span class="pln">d</span><span class="pun">][</span><span class="lit">1</span><span class="pun">];</span></li><li class="L7"><span class="pln">		sum </span><span class="pun">*=</span><span class="pln"> fac</span><span class="pun">[</span><span class="pln">n </span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="pln">len </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">/</span><span class="pln"> </span><span class="lit">2</span><span class="pun">]</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> ifac</span><span class="pun">[</span><span class="pln">n </span><span class="pun">-</span><span class="pln"> len</span><span class="pun">];</span></li><li class="L8"><span class="pln">		sum </span><span class="pun">*=</span><span class="pln"> fac</span><span class="pun">[</span><span class="pln">n </span><span class="pun">-</span><span class="pln"> len </span><span class="pun">/</span><span class="pln"> </span><span class="lit">2</span><span class="pun">]</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> ifac</span><span class="pun">[</span><span class="pln">n </span><span class="pun">-</span><span class="pln"> len</span><span class="pun">];</span></li><li class="L9"><span class="pln">		val</span><span class="pun">[</span><span class="pln">len</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> sum</span><span class="pun">;</span></li><li class="L0"><span class="pln">	</span><span class="pun">}</span></li><li class="L1"><span class="pln">	val</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> qpow</span><span class="pun">(</span><span class="pln">n</span><span class="pun">,</span><span class="pln"> n</span><span class="pun">);</span></li><li class="L2"><span class="pln">	L</span><span class="pun">(</span><span class="pln">o</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">)</span><span class="pln"> L</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> n</span><span class="pun">)</span><span class="pln"> val</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">-=</span><span class="pln"> val</span><span class="pun">[</span><span class="pln">i </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">];</span></li><li class="L3"><span class="pln">	L</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> n</span><span class="pun">)</span><span class="pln"> val</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">-=</span><span class="pln"> val</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span></li><li class="L4"><span class="pln">	L</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> n</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></li><li class="L5"><span class="pln">		cout </span><span class="pun">&lt;&lt;</span><span class="pln"> val</span><span class="pun">[</span><span class="pln">i</span><span class="pun">].</span><span class="pln">x </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">' '</span><span class="pun">;</span></li><li class="L6"><span class="pln">	</span><span class="pun">}</span></li><li class="L7"><span class="pln">	cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">'\n'</span><span class="pun">;</span></li><li class="L8"><span class="pln">	L</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> n</span><span class="pun">)</span><span class="pln"> val</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></li><li class="L9"><span class="pun">}</span></li><li class="L0"><span class="typ">int</span><span class="pln"> main </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span></li><li class="L1"><span class="pln">	ios </span><span class="pun">::</span><span class="pln"> sync_with_stdio</span><span class="pun">(</span><span class="kwd">false</span><span class="pun">);</span></li><li class="L2"><span class="pln">	cin</span><span class="pun">.</span><span class="pln">tie </span><span class="pun">(</span><span class="lit">0</span><span class="pun">);</span><span class="pln"> cout</span><span class="pun">.</span><span class="pln">tie </span><span class="pun">(</span><span class="lit">0</span><span class="pun">);</span></li><li class="L3"><span class="pln">	</span><span class="typ">int</span><span class="pln"> t</span><span class="pun">;</span><span class="pln"> cin </span><span class="pun">&gt;&gt;</span><span class="pln"> t</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">while</span><span class="pun">(</span><span class="pln">t</span><span class="pun">--)</span><span class="pln"> </span><span class="typ">Main</span><span class="pun">();</span></li><li class="L4"><span class="pln">	</span><span class="kwd">return</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></li><li class="L5"><span class="pun">}</span></li></ol></pre>
     </div>
     <script type="text/javascript">
      $(function () {
            String.prototype.replaceAll = function (search, replace) {
                return this.split(search).join(replace);
            };

            $(".prettyprint.program-source").each(function() {
                var preId = "program-source-text";
                var cpyId = ("id" + Math.random()).replaceAll(".", "0");

                var $copy = $("<div title='Copy' data-clipboard-target='#" + preId + "' id='" + cpyId + "' class='source-copier'>Copy</div>");
                $(this).parent().find(".caption").append($copy);

                var clipboard = new Clipboard('#' + cpyId, {
                    text: function(trigger) {
                        return Codeforces.filterClipboardText(document.querySelector('#' + preId).innerText);
                    }
                });

                clipboard.on('success', function(e) {
                    Codeforces.showMessage("The source code has been copied into the clipboard");
                    e.clearSelection();
                });
            });
        });
     </script>
     <div class="tests-placeholder">
      <div class="roundbox testResultBoxPrototype borderTopRound" style="margin-top:2em;font-size:0.8em;">
       <div class="caption titled">
        <span class="test">
         ?
        </span>
        <div class="top-links">
        </div>
       </div>
       <div class="infoline tm_infoline">
        <strong>
         Time
        </strong>
        :
        <span class="timeConsumed">
         ?
        </span>
        ms,
        <strong>
         memory
        </strong>
        :
        <span class="memoryConsumed">
         ?
        </span>
        KB
       </div>
       <div class="infoline verdict_infoline">
        <div class="verdict_type">
         Verdict:
         <span class="verdict">
          ?
         </span>
        </div>
       </div>
       <div class="file input-view">
        <div class="name">
         Input
        </div>
        <div class="text">
         <pre class="input">?</pre>
        </div>
       </div>
       <div class="file output-view">
        <div class="name">
         Participant's output
        </div>
        <div class="text">
         <pre class="output">?</pre>
        </div>
       </div>
       <div class="file answer-view">
        <div class="name">
         Jury's answer
        </div>
        <div class="text">
         <pre class="answer">?</pre>
        </div>
       </div>
       <div class="file checker-comment-view">
        <div class="name">
         Checker comment
        </div>
        <div class="text">
         <pre class="checkerComment">?</pre>
        </div>
       </div>
       <div class="file diagnostics-result-comment-view">
        <div class="name">
         Diagnostics
        </div>
        <div class="text">
         <pre class="diagnostics">?</pre>
        </div>
       </div>
      </div>
      <style type="text/css">
       .testResultBoxPrototype {
            display: none;
        }
      </style>
      <script type="application/javascript">
       function toInteger(s) {
            var result = parseInt(s);
            if (isNaN(result)) {
                result = 0;
            }
            return result;
        }

        function addTestBox(container, test, timeConsumed, memoryConsumed, verdict, accepted, rejected, input, output, answer,
                            exitCode, checkerComment, checkerExitCode, diagnostics) {
            var box = $(".testResultBoxPrototype").clone();
            box.find(".test").text(test);

            if (typeof timeConsumed == 'undefined' && typeof memoryConsumed == 'undefined') {
                box.find(".tm_infoline").hide();
            } else {
                box.find(".timeConsumed").text(timeConsumed);
                box.find(".memoryConsumed").text(Math.round(toInteger(memoryConsumed) / 1024));
            }

            if (typeof verdict == 'undefined') {
                box.find(".verdict_infoline").hide();
            } else {
                box.find(".verdict").text(verdict);
                if (accepted === "true") {
                    box.find(".verdict_type").addClass("welldone");
                }
                if (rejected === "true") {
                    box.find(".verdict_type").addClass("error");
                }
            }

            if (typeof input == 'undefined') {
                box.find(".input").closest(".file").hide();
            } else {
                box.find(".input").text(input);
            }

            if (typeof output == 'undefined') {
                box.find(".output").closest(".file").hide();
            } else {
                box.find(".output").text(output);
            }

            if (typeof answer == 'undefined') {
                box.find(".answer").closest(".file").hide();
            } else {
                box.find(".answer").text(answer);
            }

            if (typeof checkerComment == 'undefined') {
                box.find(".checkerComment").closest(".file").hide();
            } else {
                box.find(".checkerComment").text(checkerComment);
            }

            if (typeof diagnostics == 'undefined') {
                box.find(".diagnostics").closest(".file").hide();
            } else {
                box.find(".diagnostics").text(diagnostics);
            }

            box.removeClass("testResultBoxPrototype");
            container.append(box);
        }
      </script>
      <div class="click-to-view-tests-div smaller" style="margin-top: 1em;">
       <a class="click-to-view-tests" href="#">
        Click
       </a>
       to see test details
      </div>
     </div>
     <script type="application/javascript">
      $(function () {
                $(".click-to-view-tests").click(function() {
                    var testsPlaceholder = $(".tests-placeholder");

                    $.post("/data/submitSource", {submissionId: 285418011}, function(data) {
                        var testCount = data["testCount"];
                        if (typeof testCount != 'undefined') {
                            $(".click-to-view-tests-div").hide();
                        }

                        const ACCEPTED_PREFIX = "accepted#";
                        const testIndices = [];
                        for (const key of Object.keys(data)) {
                            if (key.indexOf(ACCEPTED_PREFIX) === 0) {
                                testIndices.push(Number.parseInt(key.substring(ACCEPTED_PREFIX.length)));
                            }
                        }
                        testIndices.sort((a, b) => a - b);

                        for (var i = 0; i < testCount; i++) {
                            var test = testIndices[i]
                            var timeConsumed = data["timeConsumed#" + test];
                            var memoryConsumed = data["memoryConsumed#" + test];
                            var verdict = data["verdict#" + test];
                            var accepted = data["accepted#" + test];
                            var rejected = data["rejected#" + test];
                            var input = data["input#" + test];
                            var output = data["output#" + test];
                            var answer = data["answer#" + test];
                            var exitCode = data["exitCode#" + test];
                            var checkerStdoutAndStderr = data["checkerStdoutAndStderr#" + test];
                            var checkerExitCode = data["checkerExitCode#" + test];
                            var diagnostics = data["diagnostics#" + test];
                            addTestBox(testsPlaceholder, test, timeConsumed, memoryConsumed, verdict, accepted, rejected, input, output, answer, exitCode,
                                checkerStdoutAndStderr, checkerExitCode, diagnostics);
                        }
                    });
                    return false;
                });
            });
     </script>
     <div class="submissions-diff-popup" style="display:none;width:900px;height:500px;overflow:auto;padding:1em;margin:1em;font-size:1.2rem;">
      <div>
       <form action="#" class="getDiffForm" method="post">
        <input name="csrf_token" type="hidden" value="f74f2aa5e578c2fd20fb35fde60d1cbd"/>
        <table>
         <tbody>
          <tr>
           <td style="padding-right: 1em !important;">
            <label for="previousSubmissionId">
             Previous Submission:
            </label>
            <input name="previousSubmissionId" type="text" value=""/>
            <div class="shiftUp error__previousSubmissionId">
             <span class="error for__previousSubmissionId" style="display: none;">
             </span>
             <span class="notice for__previousSubmissionId">
             </span>
            </div>
           </td>
           <td style="padding-right: 1em !important;">
            <label for="previousSubmissionId">
             Current Submission:
            </label>
            <input name="currentSubmissionId" type="text" value="285418011"/>
            <div class="shiftUp error__currentSubmissionId">
             <span class="error for__currentSubmissionId" style="display: none;">
             </span>
             <span class="notice for__currentSubmissionId">
             </span>
            </div>
           </td>
           <td>
            <input type="submit" value="Compare"/>
            <img alt="waiting..." class="waitingIndicator" src="//codeforces.org/s/66284/images/indicator.gif" style="display: none"/>
            <div class="shiftUp error__diffFormSubmit">
             <span class="error for__diffFormSubmit" style="display: none;">
             </span>
             <span class="notice for__diffFormSubmit">
             </span>
            </div>
           </td>
          </tr>
         </tbody>
        </table>
        <input name="_tta" type="hidden" value="546"/>
       </form>
       <div class="diffHtmlTarget">
       </div>
      </div>
      <script type="text/javascript">
       Codeforces.getDiffFormSubmitListener = function (event) {
        Codeforces.clearAjaxFormErrors();
        var waitingIndicator = $(this).find(".waitingIndicator");
        waitingIndicator.show();

        var previousSubmissionId = $(this).find("input[name='previousSubmissionId']").val();
        var currentSubmissionId = $(this).find("input[name='currentSubmissionId']").val();
        var targetDiv = $(this).next();
        Codeforces.clearAjaxFormErrors(".getDiffForm");
        $.post("/data/submissionsDiff",
            {action: "getDiff", previousSubmissionId: previousSubmissionId, currentSubmissionId: currentSubmissionId},
            function (response) {
                waitingIndicator.hide();
                targetDiv.html("");

                if (response["success"] == "true") {
                    targetDiv.html("<pre class=\"prettyprint\">" + response["diffHtml"] + "</pre>");
                    prettyPrint();
                } else {
                    Codeforces.setAjaxFormErrors(".getDiffForm", response);
                }
            },
            "json"
        );
        return false;
    };
      </script>
     </div>
     <div class="add-submission-to-problem-solutions-box" style="display: none; width: 500px">
      <form method="POST">
       <input name="csrf_token" type="hidden" value="f74f2aa5e578c2fd20fb35fde60d1cbd"/>
       <h5>
        Add solution to problem
       </h5>
       <hr/>
       <table class="table-form">
        <tbody>
         <tr>
          <td class="field-name">
           Filename:
          </td>
          <td>
           <input class="filename-field" style="width: 300px;box-sizing: border-box;" type="text" value="285418011_orzdevinwang_ok.cpp"/>
          </td>
         </tr>
         <tr>
          <td class="field-name">
           Solution tag:
          </td>
          <td>
           <select class="solutionTag-field" style="width: 300px">
            <option selected="" value="ACCEPTED">
             Correct
            </option>
            <option value="REJECTED">
             Incorrect
            </option>
            <option value="TIME_LIMIT_EXCEEDED">
             Time limit exceeded
            </option>
            <option value="WRONG_ANSWER">
             Wrong answer
            </option>
            <option value="PRESENTATION_ERROR">
             Presentation error
            </option>
            <option value="MEMORY_LIMIT_EXCEEDED">
             Memory limit exceeded
            </option>
            <option value="FAILED">
             Failed
            </option>
           </select>
          </td>
         </tr>
         <tr>
          <td colspan="2" style="text-align: center;">
           <input autofocus="" class="submit" type="submit" value="Add"/>
          </td>
         </tr>
        </tbody>
       </table>
       <input name="_tta" type="hidden" value="546"/>
      </form>
     </div>
     <script type="text/javascript">
      $(function () {
        $("button.showDiff").click(function () {
            Codeforces.facebox(".submissions-diff-popup", "//codeforces.org/s/66284");
            var getDiffForms = $(".getDiffForm");
            getDiffForms.submit(Codeforces.getDiffFormSubmitListener);
        });

        $("button.challengeButton").click(function () {
            Codeforces.redirect($(this).attr("data-href"));
        });


    });
     </script>
    </div>
   </div>
   <br style="clear: both;"/>
   <div id="footer">
    <div>
     <a href="https://codeforces.com/">
      Codeforces
     </a>
     (c) Copyright 2010-2024 Mike Mirzayanov
    </div>
    <div>
     The only programming contests Web 2.0 platform
    </div>
    <div>
     Server time: Nov/10/2024 17:44:43
     <sup style="font-size:8px;" title="timezone offset">
      UTC+5.5
     </sup>
     (j2).
    </div>
    <div>
     Desktop version, switch to
     <a class="switchToMobile" href="?mobile=true" rel="nofollow">
      mobile version
     </a>
     .
    </div>
    <div class="smaller">
     <a href="/privacy">
      Privacy Policy
     </a>
    </div>
    <div style="margin-top: 25px;">
     Supported by
    </div>
    <div class="footer-logo-div" style="left: 30px;">
     <a href="https://ton.org/">
      <img alt="TON" src="//codeforces.org/s/66284/images/ton-100x100.png" style="margin-right: 2em; width: 60px;" title="TON"/>
     </a>
     <div class="sep">
     </div>
     <a class="itmo-logo" href="https://en.itmo.ru/en/">
      <img alt="ITMO University" src="//codeforces.org/s/66284/images/itmo_small_en-logo.png" style="width: 140px;" title="ITMO University"/>
     </a>
    </div>
   </div>
   <script type="text/javascript">
    $(function() {
                $(".switchToMobile").click(function() {
                    Codeforces.redirect(Codeforces.updateUrlParameter(document.location.href, "mobile", "true"));
                    return false;
                });
                $(".switchToDesktop").click(function() {
                    Codeforces.redirect(Codeforces.updateUrlParameter(document.location.href, "mobile", "false"));
                    return false;
                });
            });
   </script>
   <script type="text/javascript">
    $(document).ready(function () {
            if ($(window).width() < 1600) {
                $('.button-up').css('width', '30px').css('line-height', '30px').css('font-size', '20px');
            }

            if ($(window).width() >= 1200) {
                $ (window).scroll (function () {
                    if ($ (this).scrollTop () > 100) {
                        $ ('.button-up').fadeIn();
                    } else {
                        $ ('.button-up').fadeOut();
                    }
                });

                $('.button-up').click(function () {
                    $('body,html').animate({
                        scrollTop: 0
                    }, 500);
                    return false;
                });

                $('.button-up').hover(function () {
                    $(this).animate({
                        'opacity':'1'
                    }).css({'background-color':'#e7ebf0','color':'#6a86a4'});
                }, function () {
                    $(this).animate({
                        'opacity':'0.7'
                    }).css({'background':'none','color':'#d3dbe4'});;
                });
            }
            Codeforces.focusOnError();
        });
   </script>
   <div class="userListsFacebox" style="display:none;">
    <div style="padding: 0.5em; width: 600px; max-height: 200px; overflow-y: auto">
     <div class="datatable" style="background-color: #E1E1E1; padding-bottom: 3px;">
      <div class="lt">
      </div>
      <div class="rt">
      </div>
      <div class="lb">
      </div>
      <div class="rb">
      </div>
      <div style="padding: 4px 0 0 6px;font-size:1.4rem;position:relative;">
       User lists
       <div style="position:absolute;right:0.25em;top:0.35em;">
        <span class="rowCount" style="padding:0;position:relative;bottom:2px;">
        </span>
        <img class="closed" src="//codeforces.org/s/66284/images/icons/control.png"/>
        <span class="filter" style="display:none;">
         <img class="opened" src="//codeforces.org/s/66284/images/icons/control-270.png"/>
         <input style="padding:0 0 0 20px;position:relative;bottom:2px;border:1px solid #aaa;height:17px;font-size:1.3rem;"/>
        </span>
       </div>
      </div>
      <div style="background-color: white;margin:0.3em 3px 0 3px;position:relative;">
       <div class="ilt">
       </div>
       <div class="irt">
       </div>
       <table class="">
        <thead>
         <tr>
          <th class="top left right">
           Name
          </th>
         </tr>
        </thead>
        <tbody>
         <tr class="no-items visible">
          <td class="bottom dark left right" colspan="32" style="text-align:left;">
           No items
          </td>
         </tr>
        </tbody>
       </table>
      </div>
     </div>
     <script type="text/javascript">
      $(document).ready(function () {
                // Create new ':containsIgnoreCase' selector for search
                jQuery.expr[':'].containsIgnoreCase = function(a, i, m) {
                    return jQuery(a).text().toUpperCase()
                            .indexOf(m[3].toUpperCase()) >= 0;
                };

                if (window.updateDatatableFilter == undefined) {
                    window.updateDatatableFilter = function(i) {
                        var parent = $(i).parent().parent().parent().parent();
                        $("tr.no-items", parent).remove();
                        $("tr", parent).hide().removeClass('visible');
                        var text = $(i).val();
                        if (text) {
                            $("tr" + ":containsIgnoreCase('" + text + "')", parent).show().addClass('visible');
                        } else {
                            parent.find(".rowCount").text("");
                            $("tr", parent).show().addClass('visible');
                        }

                        var found = false;
                        var visibleRowCount = 0;
                        $("tr", parent).each(function () {
                            if (!found) {
                                if ($(this).find("th").size() > 0) {
                                    $(this).show().addClass('visible');
                                    found = true;
                                }
                            }
                            if ($(this).hasClass('visible')) {
                                visibleRowCount++;
                            }
                        });
                        if (text) {
                            parent.find(".rowCount").text("Matches: " + (visibleRowCount - (found ? 1 : 0)));
                        }
                        if (visibleRowCount == (found ? 1 : 0)) {
                            $("<tr class='no-items visible'><td style=\"text-align:left;\"colspan=\"32\">No items<\/td><\/tr>").appendTo($(parent).find('table'));
                        }
                        $(parent).find("tr td").removeClass("dark");
                        $(parent).find("tr.visible:odd td").addClass("dark");
                    }

                    $(".datatable .closed").click(function () {
                        var parent = $(this).parent();
                        $(this).hide();
                        $(".filter", parent).fadeIn(function () {
                            $("input", parent).val("").focus().css("border", "1px solid #aaa");
                        });
                    });

                    $(".datatable .opened").click(function () {
                        var parent = $(this).parent().parent();
                        $(".filter", parent).fadeOut(function () {
                            $(".closed", parent).show();
                            $("input", parent).val("").each(function () {
                                window.updateDatatableFilter(this);
                            });
                        });
                    });

                    $(".datatable .filter input").keyup(function(e) {
                        window.updateDatatableFilter(this);
                        e.preventDefault();
                        e.stopPropagation();
                    });

                    $(".datatable table").each(function () {
                        var found = false;
                        $("tr", this).each(function () {
                            if (!found && $(this).find("th").size() == 0) {
                                found = true;
                            }
                        });
                        if (!found) {
                            $("<tr class='no-items visible'><td style=\"text-align:left;\"colspan=\"32\">No items<\/td><\/tr>").appendTo(this);
                        }
                    });

                    // Applies styles to datatables.
                    $(".datatable").each(function () {
                        $(this).find("tr:first th").addClass("top");
                        $(this).find("tr:last td").addClass("bottom");
                        $(this).find("tr:odd td").addClass("dark");
                        $(this).find("tr td:first-child, tr th:first-child").addClass("left");
                        $(this).find("tr td:last-child, tr th:last-child").addClass("right");
                    });

                    $(".datatable table.tablesorter").each(function () {
                        $(this).bind("sortEnd", function () {
                            $(".datatable").each(function () {
                                $(this).find("th, td")
                                    .removeClass("top").removeClass("bottom")
                                    .removeClass("left").removeClass("right")
                                    .removeClass("dark");
                                $(this).find("tr:first th").addClass("top");
                                $(this).find("tr:last td").addClass("bottom");
                                $(this).find("tr:odd td").addClass("dark");
                                $(this).find("tr td:first-child, tr th:first-child").addClass("left");
                                $(this).find("tr td:last-child, tr th:last-child").addClass("right");
                            });
                        });
                    });
                }
        });
     </script>
    </div>
   </div>
   <script type="application/javascript">
    $(function() {
            $(".userListMarker").click(function() {
                $.post("/data/lists", {action: "findTouched"}, function(json) {
                    Codeforces.facebox(".userListsFacebox");
                    var tbody = $("#facebox tbody");
                    tbody.empty();
                    for (var i in json) {
                        tbody.append(
                            $("<tr></tr>").append(
                                $("<td></td>").attr("data-readKey", json[i].readKey).text(json[i].name)
                            )
                        );
                    }
                    Codeforces.updateDatatables();
                    tbody.find("td").css("cursor", "pointer").click(function() {
                        document.location = Codeforces.updateUrlParameter(document.location.href, "list", $(this).attr("data-readKey"));
                    });
                }, "json");
            });
        });
   </script>
  </div>
  <script type="application/javascript">
   if ('serviceWorker' in navigator && 'fetch' in window && 'caches' in window) {
            navigator.serviceWorker.register('/service-worker-66284.js')
                .then(function (registration) {
                    console.log('Service worker registered: ', registration);
                })
                .catch(function (error) {
                    console.log('Registration failed: ', error);
                });
        }
  </script>
  <script crossorigin="anonymous" data-cf-beacon='{"rayId":"8e05f6b5bd5a29f2","version":"2024.10.5","serverTiming":{"name":{"cfExtPri":true,"cfL4":true,"cfSpeedBrain":true,"cfCacheStatus":true}},"token":"316c29dfa3804effb5a91c52a59b5bd0","b":1}' defer="" integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ==" src="https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015">
  </script>
  <div id="datepick-div" style="display: none;">
  </div>
  <div id="cboxOverlay" style="display: none;">
  </div>
  <div class="" id="colorbox" style="display: none; padding-bottom: 42px; padding-right: 42px;">
   <div id="cboxWrapper">
    <div>
     <div id="cboxTopLeft" style="float: left;">
     </div>
     <div id="cboxTopCenter" style="float: left;">
     </div>
     <div id="cboxTopRight" style="float: left;">
     </div>
    </div>
    <div style="clear: left;">
     <div id="cboxMiddleLeft" style="float: left;">
     </div>
     <div id="cboxContent" style="float: left;">
      <div id="cboxLoadedContent" style="width: 0px; height: 0px; overflow: hidden; float: left;">
      </div>
      <div id="cboxLoadingOverlay" style="float: left;">
      </div>
      <div id="cboxLoadingGraphic" style="float: left;">
      </div>
      <div id="cboxTitle" style="float: left;">
      </div>
      <div id="cboxCurrent" style="float: left;">
      </div>
      <div id="cboxNext" style="float: left;">
      </div>
      <div id="cboxPrevious" style="float: left;">
      </div>
      <div id="cboxSlideshow" style="float: left;">
      </div>
      <div id="cboxClose" style="float: left;">
      </div>
     </div>
     <div id="cboxMiddleRight" style="float: left;">
     </div>
    </div>
    <div style="clear: left;">
     <div id="cboxBottomLeft" style="float: left;">
     </div>
     <div id="cboxBottomCenter" style="float: left;">
     </div>
     <div id="cboxBottomRight" style="float: left;">
     </div>
    </div>
   </div>
   <div style="position: absolute; width: 9999px; visibility: hidden; display: none;">
   </div>
  </div>
  <div style="position: absolute; width: 0px; height: 0px; overflow: hidden; padding: 0px; border: 0px; margin: 0px;">
   <div id="MathJax_Font_Test" style="position: absolute; visibility: hidden; top: 0px; left: 0px; width: auto; min-width: 0px; max-width: none; padding: 0px; border: 0px; margin: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; font-size: 40px; font-weight: normal; font-style: normal; font-family: STIXSizeOneSym, monospace;">
   </div>
  </div>
 </body>
</html>
