[
    {
        "handle": "ksun48",
        "submission_list": [
            {
                "id": 288561266,
                "contestId": 2026,
                "creationTimeSeconds": 1730129107,
                "relativeTimeSeconds": 3007,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ksun48"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 1155,
                "memoryConsumedBytes": 389939200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288532750,
                "contestId": 2026,
                "creationTimeSeconds": 1730127347,
                "relativeTimeSeconds": 1247,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ksun48"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288529378,
                "contestId": 2026,
                "creationTimeSeconds": 1730127174,
                "relativeTimeSeconds": 1074,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ksun48"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 155,
                "memoryConsumedBytes": 21196800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288525443,
                "contestId": 2026,
                "creationTimeSeconds": 1730126964,
                "relativeTimeSeconds": 864,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ksun48"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 343,
                "memoryConsumedBytes": 8396800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288518474,
                "contestId": 2026,
                "creationTimeSeconds": 1730126622,
                "relativeTimeSeconds": 522,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ksun48"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288512906,
                "contestId": 2026,
                "creationTimeSeconds": 1730126377,
                "relativeTimeSeconds": 277,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ksun48"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510200,
                "contestId": 2026,
                "creationTimeSeconds": 1730126155,
                "relativeTimeSeconds": 55,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ksun48"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "arvindf232",
        "submission_list": [
            {
                "id": 288648436,
                "contestId": 2026,
                "creationTimeSeconds": 1730156176,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "arvindf232"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 92,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288648421,
                "contestId": 2026,
                "creationTimeSeconds": 1730156137,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "arvindf232"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3",
                "verdict": "TIME_LIMIT_EXCEEDED",
                "testset": "TESTS",
                "passedTestCount": 11,
                "timeConsumedMillis": 2000,
                "memoryConsumedBytes": 16076800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288648408,
                "contestId": 2026,
                "creationTimeSeconds": 1730156122,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "arvindf232"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3",
                "verdict": "MEMORY_LIMIT_EXCEEDED",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 268390400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288648392,
                "contestId": 2026,
                "creationTimeSeconds": 1730156099,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "arvindf232"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3",
                "verdict": "MEMORY_LIMIT_EXCEEDED",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 268390400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288568739,
                "contestId": 2026,
                "creationTimeSeconds": 1730129695,
                "relativeTimeSeconds": 3595,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "arvindf232"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Kotlin 1.9",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 609,
                "memoryConsumedBytes": 369049600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288541409,
                "contestId": 2026,
                "creationTimeSeconds": 1730127818,
                "relativeTimeSeconds": 1718,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "arvindf232"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Kotlin 1.9",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 234,
                "memoryConsumedBytes": 1331200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288536560,
                "contestId": 2026,
                "creationTimeSeconds": 1730127549,
                "relativeTimeSeconds": 1449,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "arvindf232"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Kotlin 1.9",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 1265,
                "memoryConsumedBytes": 33280000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288528126,
                "contestId": 2026,
                "creationTimeSeconds": 1730127105,
                "relativeTimeSeconds": 1005,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "arvindf232"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Kotlin 1.9",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 187,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288513946,
                "contestId": 2026,
                "creationTimeSeconds": 1730126421,
                "relativeTimeSeconds": 321,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "arvindf232"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Kotlin 1.9",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 218,
                "memoryConsumedBytes": 1228800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510663,
                "contestId": 2026,
                "creationTimeSeconds": 1730126250,
                "relativeTimeSeconds": 150,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "arvindf232"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Kotlin 1.9",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 187,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "neal",
        "submission_list": [
            {
                "id": 289460762,
                "contestId": 2026,
                "creationTimeSeconds": 1730557361,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 198,
                "timeConsumedMillis": 390,
                "memoryConsumedBytes": 398643200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 289460758,
                "contestId": 2026,
                "creationTimeSeconds": 1730557361,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 78,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288610204,
                "contestId": 2026,
                "creationTimeSeconds": 1730134406,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 1233,
                "memoryConsumedBytes": 247193600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288597833,
                "contestId": 2026,
                "creationTimeSeconds": 1730132587,
                "relativeTimeSeconds": 6487,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 1233,
                "memoryConsumedBytes": 248524800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "neal",
        "submission_list": [
            {
                "id": 289460762,
                "contestId": 2026,
                "creationTimeSeconds": 1730557361,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 198,
                "timeConsumedMillis": 390,
                "memoryConsumedBytes": 398643200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 289460758,
                "contestId": 2026,
                "creationTimeSeconds": 1730557361,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 78,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288610204,
                "contestId": 2026,
                "creationTimeSeconds": 1730134406,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 1233,
                "memoryConsumedBytes": 247193600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288597833,
                "contestId": 2026,
                "creationTimeSeconds": 1730132587,
                "relativeTimeSeconds": 6487,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 1233,
                "memoryConsumedBytes": 248524800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288597166,
                "contestId": 2026,
                "creationTimeSeconds": 1730132514,
                "relativeTimeSeconds": 6414,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 1234,
                "memoryConsumedBytes": 252416000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288590688,
                "contestId": 2026,
                "creationTimeSeconds": 1730131865,
                "relativeTimeSeconds": 5765,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 1,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288538098,
                "contestId": 2026,
                "creationTimeSeconds": 1730127634,
                "relativeTimeSeconds": 1534,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 204800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288532543,
                "contestId": 2026,
                "creationTimeSeconds": 1730127337,
                "relativeTimeSeconds": 1237,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 421,
                "memoryConsumedBytes": 7270400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288523247,
                "contestId": 2026,
                "creationTimeSeconds": 1730126854,
                "relativeTimeSeconds": 754,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288515667,
                "contestId": 2026,
                "creationTimeSeconds": 1730126497,
                "relativeTimeSeconds": 397,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288512626,
                "contestId": 2026,
                "creationTimeSeconds": 1730126364,
                "relativeTimeSeconds": 264,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "neal"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "rsy",
        "submission_list": [
            {
                "id": 288594432,
                "contestId": 2026,
                "creationTimeSeconds": 1730132230,
                "relativeTimeSeconds": 6130,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "rsy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288593722,
                "contestId": 2026,
                "creationTimeSeconds": 1730132158,
                "relativeTimeSeconds": 6058,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "rsy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288591954,
                "contestId": 2026,
                "creationTimeSeconds": 1730131990,
                "relativeTimeSeconds": 5890,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "rsy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288590775,
                "contestId": 2026,
                "creationTimeSeconds": 1730131873,
                "relativeTimeSeconds": 5773,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "rsy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 1,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288587507,
                "contestId": 2026,
                "creationTimeSeconds": 1730131543,
                "relativeTimeSeconds": 5443,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "rsy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 512000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288578032,
                "contestId": 2026,
                "creationTimeSeconds": 1730130629,
                "relativeTimeSeconds": 4529,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "rsy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 421,
                "memoryConsumedBytes": 14745600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288569834,
                "contestId": 2026,
                "creationTimeSeconds": 1730129789,
                "relativeTimeSeconds": 3689,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "rsy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 1671,
                "memoryConsumedBytes": 280576000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288522785,
                "contestId": 2026,
                "creationTimeSeconds": 1730126830,
                "relativeTimeSeconds": 730,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "rsy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 409600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "jiangly",
        "submission_list": [
            {
                "id": 288622486,
                "contestId": 2026,
                "creationTimeSeconds": 1730138811,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "jiangly"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 375,
                "memoryConsumedBytes": 266240000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288555025,
                "contestId": 2026,
                "creationTimeSeconds": 1730128657,
                "relativeTimeSeconds": 2557,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "jiangly"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "CHALLENGED",
                "testset": "CHALLENGES",
                "passedTestCount": 96,
                "timeConsumedMillis": 218,
                "memoryConsumedBytes": 262656000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288536060,
                "contestId": 2026,
                "creationTimeSeconds": 1730127522,
                "relativeTimeSeconds": 1422,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "jiangly"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 409600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288532129,
                "contestId": 2026,
                "creationTimeSeconds": 1730127315,
                "relativeTimeSeconds": 1215,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "jiangly"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 390,
                "memoryConsumedBytes": 8499200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288523790,
                "contestId": 2026,
                "creationTimeSeconds": 1730126881,
                "relativeTimeSeconds": 781,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "jiangly"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288514323,
                "contestId": 2026,
                "creationTimeSeconds": 1730126438,
                "relativeTimeSeconds": 338,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "jiangly"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510659,
                "contestId": 2026,
                "creationTimeSeconds": 1730126250,
                "relativeTimeSeconds": 150,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "jiangly"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "Ormlis",
        "submission_list": [
            {
                "id": 288510501,
                "contestId": 2026,
                "creationTimeSeconds": 1730126233,
                "relativeTimeSeconds": 133,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ormlis"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "abc864197532",
        "submission_list": [
            {
                "id": 288608405,
                "contestId": 2026,
                "creationTimeSeconds": 1730133899,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "RUNTIME_ERROR",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 421,
                "memoryConsumedBytes": 455372800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288604802,
                "contestId": 2026,
                "creationTimeSeconds": 1730133234,
                "relativeTimeSeconds": 7134,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "RUNTIME_ERROR",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 405,
                "memoryConsumedBytes": 455577600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288603976,
                "contestId": 2026,
                "creationTimeSeconds": 1730133172,
                "relativeTimeSeconds": 7072,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 4,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288601680,
                "contestId": 2026,
                "creationTimeSeconds": 1730132966,
                "relativeTimeSeconds": 6866,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 4,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288595568,
                "contestId": 2026,
                "creationTimeSeconds": 1730132349,
                "relativeTimeSeconds": 6249,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 4,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288594901,
                "contestId": 2026,
                "creationTimeSeconds": 1730132278,
                "relativeTimeSeconds": 6178,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 4,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288592953,
                "contestId": 2026,
                "creationTimeSeconds": 1730132080,
                "relativeTimeSeconds": 5980,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 4,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 3993600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288590994,
                "contestId": 2026,
                "creationTimeSeconds": 1730131894,
                "relativeTimeSeconds": 5794,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 1,
                "timeConsumedMillis": 31,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288544648,
                "contestId": 2026,
                "creationTimeSeconds": 1730128004,
                "relativeTimeSeconds": 1904,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288541005,
                "contestId": 2026,
                "creationTimeSeconds": 1730127794,
                "relativeTimeSeconds": 1694,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 405,
                "memoryConsumedBytes": 16384000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288530332,
                "contestId": 2026,
                "creationTimeSeconds": 1730127225,
                "relativeTimeSeconds": 1125,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 819200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288518687,
                "contestId": 2026,
                "creationTimeSeconds": 1730126633,
                "relativeTimeSeconds": 533,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 389,
                "memoryConsumedBytes": 307200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510904,
                "contestId": 2026,
                "creationTimeSeconds": 1730126271,
                "relativeTimeSeconds": 171,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510611,
                "contestId": 2026,
                "creationTimeSeconds": 1730126246,
                "relativeTimeSeconds": 146,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "abc864197532"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "antontrygubO_o",
        "submission_list": [
            {
                "id": 288561153,
                "contestId": 2026,
                "creationTimeSeconds": 1730129099,
                "relativeTimeSeconds": 2999,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "antontrygubO_o"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 1638400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288551300,
                "contestId": 2026,
                "creationTimeSeconds": 1730128406,
                "relativeTimeSeconds": 2306,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "antontrygubO_o"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 718,
                "memoryConsumedBytes": 11980800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288528175,
                "contestId": 2026,
                "creationTimeSeconds": 1730127107,
                "relativeTimeSeconds": 1007,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "antontrygubO_o"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 1024000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288517929,
                "contestId": 2026,
                "creationTimeSeconds": 1730126596,
                "relativeTimeSeconds": 496,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "antontrygubO_o"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288516062,
                "contestId": 2026,
                "creationTimeSeconds": 1730126514,
                "relativeTimeSeconds": 414,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "antontrygubO_o"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288515114,
                "contestId": 2026,
                "creationTimeSeconds": 1730126473,
                "relativeTimeSeconds": 373,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "antontrygubO_o"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "COMPILATION_ERROR",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 0,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510241,
                "contestId": 2026,
                "creationTimeSeconds": 1730126175,
                "relativeTimeSeconds": 75,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "antontrygubO_o"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "Misuki",
        "submission_list": [
            {
                "id": 288562514,
                "contestId": 2026,
                "creationTimeSeconds": 1730129198,
                "relativeTimeSeconds": 3098,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Misuki"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288551604,
                "contestId": 2026,
                "creationTimeSeconds": 1730128426,
                "relativeTimeSeconds": 2326,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Misuki"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 453,
                "memoryConsumedBytes": 5939200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288530132,
                "contestId": 2026,
                "creationTimeSeconds": 1730127214,
                "relativeTimeSeconds": 1114,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Misuki"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288516991,
                "contestId": 2026,
                "creationTimeSeconds": 1730126555,
                "relativeTimeSeconds": 455,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Misuki"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511642,
                "contestId": 2026,
                "creationTimeSeconds": 1730126317,
                "relativeTimeSeconds": 217,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Misuki"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "Ronnie007",
        "submission_list": [
            {
                "id": 288595698,
                "contestId": 2026,
                "creationTimeSeconds": 1730132362,
                "relativeTimeSeconds": 6262,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ronnie007"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 7,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 506368000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288565205,
                "contestId": 2026,
                "creationTimeSeconds": 1730129409,
                "relativeTimeSeconds": 3309,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ronnie007"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 92,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288544765,
                "contestId": 2026,
                "creationTimeSeconds": 1730128010,
                "relativeTimeSeconds": 1910,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ronnie007"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 436,
                "memoryConsumedBytes": 12083200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288531829,
                "contestId": 2026,
                "creationTimeSeconds": 1730127300,
                "relativeTimeSeconds": 1200,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ronnie007"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 109,
                "memoryConsumedBytes": 4096000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288518565,
                "contestId": 2026,
                "creationTimeSeconds": 1730126627,
                "relativeTimeSeconds": 527,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ronnie007"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511010,
                "contestId": 2026,
                "creationTimeSeconds": 1730126280,
                "relativeTimeSeconds": 180,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ronnie007"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "Ecrade_",
        "submission_list": [
            {
                "id": 288560885,
                "contestId": 2026,
                "creationTimeSeconds": 1730129081,
                "relativeTimeSeconds": 2981,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ecrade_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 187,
                "memoryConsumedBytes": 25702400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288560617,
                "contestId": 2026,
                "creationTimeSeconds": 1730129059,
                "relativeTimeSeconds": 2959,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ecrade_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "RUNTIME_ERROR",
                "testset": "TESTS",
                "passedTestCount": 4,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 25702400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288547887,
                "contestId": 2026,
                "creationTimeSeconds": 1730128192,
                "relativeTimeSeconds": 2092,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ecrade_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 515,
                "memoryConsumedBytes": 9625600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288533395,
                "contestId": 2026,
                "creationTimeSeconds": 1730127383,
                "relativeTimeSeconds": 1283,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ecrade_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 3686400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288516923,
                "contestId": 2026,
                "creationTimeSeconds": 1730126552,
                "relativeTimeSeconds": 452,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ecrade_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510491,
                "contestId": 2026,
                "creationTimeSeconds": 1730126232,
                "relativeTimeSeconds": 132,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Ecrade_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "YocyCraft",
        "submission_list": [
            {
                "id": 288560234,
                "contestId": 2026,
                "creationTimeSeconds": 1730129033,
                "relativeTimeSeconds": 2933,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "YocyCraft"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288547345,
                "contestId": 2026,
                "creationTimeSeconds": 1730128158,
                "relativeTimeSeconds": 2058,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "YocyCraft"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 374,
                "memoryConsumedBytes": 9625600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288532265,
                "contestId": 2026,
                "creationTimeSeconds": 1730127322,
                "relativeTimeSeconds": 1222,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "YocyCraft"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 819200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288523730,
                "contestId": 2026,
                "creationTimeSeconds": 1730126876,
                "relativeTimeSeconds": 776,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "YocyCraft"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 1638400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288521380,
                "contestId": 2026,
                "creationTimeSeconds": 1730126762,
                "relativeTimeSeconds": 662,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "YocyCraft"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 1,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 5632000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288516233,
                "contestId": 2026,
                "creationTimeSeconds": 1730126520,
                "relativeTimeSeconds": 420,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "YocyCraft"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 819200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "Umi",
        "submission_list": [
            {
                "id": 288562220,
                "contestId": 2026,
                "creationTimeSeconds": 1730129175,
                "relativeTimeSeconds": 3075,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Umi"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 452,
                "memoryConsumedBytes": 409600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288554913,
                "contestId": 2026,
                "creationTimeSeconds": 1730128650,
                "relativeTimeSeconds": 2550,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Umi"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 421,
                "memoryConsumedBytes": 9625600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288535389,
                "contestId": 2026,
                "creationTimeSeconds": 1730127488,
                "relativeTimeSeconds": 1388,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Umi"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 409600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288523890,
                "contestId": 2026,
                "creationTimeSeconds": 1730126886,
                "relativeTimeSeconds": 786,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Umi"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511665,
                "contestId": 2026,
                "creationTimeSeconds": 1730126318,
                "relativeTimeSeconds": 218,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Umi"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "manacher",
        "submission_list": [
            {
                "id": 288569450,
                "contestId": 2026,
                "creationTimeSeconds": 1730129754,
                "relativeTimeSeconds": 3654,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "manacher"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 1126400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288553450,
                "contestId": 2026,
                "creationTimeSeconds": 1730128553,
                "relativeTimeSeconds": 2453,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "manacher"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 390,
                "memoryConsumedBytes": 17100800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288532312,
                "contestId": 2026,
                "creationTimeSeconds": 1730127325,
                "relativeTimeSeconds": 1225,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "manacher"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 7782400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288520786,
                "contestId": 2026,
                "creationTimeSeconds": 1730126735,
                "relativeTimeSeconds": 635,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "manacher"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510831,
                "contestId": 2026,
                "creationTimeSeconds": 1730126265,
                "relativeTimeSeconds": 165,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "manacher"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "MMYYFF",
        "submission_list": [
            {
                "id": 288654341,
                "contestId": 2026,
                "creationTimeSeconds": 1730165041,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 358,
                "memoryConsumedBytes": 491008000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288654257,
                "contestId": 2026,
                "creationTimeSeconds": 1730164902,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288654105,
                "contestId": 2026,
                "creationTimeSeconds": 1730164717,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "TIME_LIMIT_EXCEEDED",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 2000,
                "memoryConsumedBytes": 248115200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288652928,
                "contestId": 2026,
                "creationTimeSeconds": 1730163199,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288621282,
                "contestId": 2026,
                "creationTimeSeconds": 1730138329,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 31,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288621164,
                "contestId": 2026,
                "creationTimeSeconds": 1730138286,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 252006400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288620841,
                "contestId": 2026,
                "creationTimeSeconds": 1730138164,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288620499,
                "contestId": 2026,
                "creationTimeSeconds": 1730138038,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248115200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288619968,
                "contestId": 2026,
                "creationTimeSeconds": 1730137814,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 31,
                "memoryConsumedBytes": 252006400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288619589,
                "contestId": 2026,
                "creationTimeSeconds": 1730137661,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288619387,
                "contestId": 2026,
                "creationTimeSeconds": 1730137581,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288619189,
                "contestId": 2026,
                "creationTimeSeconds": 1730137496,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288618952,
                "contestId": 2026,
                "creationTimeSeconds": 1730137417,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288618778,
                "contestId": 2026,
                "creationTimeSeconds": 1730137323,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "COMPILATION_ERROR",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 0,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288618435,
                "contestId": 2026,
                "creationTimeSeconds": 1730137194,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 252006400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288617990,
                "contestId": 2026,
                "creationTimeSeconds": 1730137017,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288617680,
                "contestId": 2026,
                "creationTimeSeconds": 1730136911,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248115200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288617561,
                "contestId": 2026,
                "creationTimeSeconds": 1730136867,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288617448,
                "contestId": 2026,
                "creationTimeSeconds": 1730136824,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288614830,
                "contestId": 2026,
                "creationTimeSeconds": 1730135942,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288614001,
                "contestId": 2026,
                "creationTimeSeconds": 1730135642,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 6,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 248012800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288613060,
                "contestId": 2026,
                "creationTimeSeconds": 1730135327,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 3,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248729600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288612861,
                "contestId": 2026,
                "creationTimeSeconds": 1730135252,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 3,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248729600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288612035,
                "contestId": 2026,
                "creationTimeSeconds": 1730134968,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 3,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 248729600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288611904,
                "contestId": 2026,
                "creationTimeSeconds": 1730134928,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 248729600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288563732,
                "contestId": 2026,
                "creationTimeSeconds": 1730129290,
                "relativeTimeSeconds": 3190,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 409600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288546930,
                "contestId": 2026,
                "creationTimeSeconds": 1730128133,
                "relativeTimeSeconds": 2033,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 967,
                "memoryConsumedBytes": 12083200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288535104,
                "contestId": 2026,
                "creationTimeSeconds": 1730127470,
                "relativeTimeSeconds": 1370,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 124,
                "memoryConsumedBytes": 6963200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288533595,
                "contestId": 2026,
                "creationTimeSeconds": 1730127393,
                "relativeTimeSeconds": 1293,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "TIME_LIMIT_EXCEEDED",
                "testset": "TESTS",
                "passedTestCount": 3,
                "timeConsumedMillis": 2500,
                "memoryConsumedBytes": 15667200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288521682,
                "contestId": 2026,
                "creationTimeSeconds": 1730126777,
                "relativeTimeSeconds": 677,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288512187,
                "contestId": 2026,
                "creationTimeSeconds": 1730126345,
                "relativeTimeSeconds": 245,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "MMYYFF"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "QwQwf",
        "submission_list": [
            {
                "id": 288862318,
                "contestId": 2026,
                "creationTimeSeconds": 1730277175,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "QwQwf"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 198,
                "timeConsumedMillis": 311,
                "memoryConsumedBytes": 259788800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288562236,
                "contestId": 2026,
                "creationTimeSeconds": 1730129175,
                "relativeTimeSeconds": 3075,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "QwQwf"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 92,
                "memoryConsumedBytes": 1638400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288553665,
                "contestId": 2026,
                "creationTimeSeconds": 1730128567,
                "relativeTimeSeconds": 2467,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "QwQwf"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 562,
                "memoryConsumedBytes": 24064000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288539384,
                "contestId": 2026,
                "creationTimeSeconds": 1730127707,
                "relativeTimeSeconds": 1607,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "QwQwf"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 512000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288524297,
                "contestId": 2026,
                "creationTimeSeconds": 1730126906,
                "relativeTimeSeconds": 806,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "QwQwf"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 3276800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288512225,
                "contestId": 2026,
                "creationTimeSeconds": 1730126347,
                "relativeTimeSeconds": 247,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "QwQwf"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511900,
                "contestId": 2026,
                "creationTimeSeconds": 1730126331,
                "relativeTimeSeconds": 231,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "QwQwf"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "GNU C11",
                "verdict": "COMPILATION_ERROR",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 0,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "dannalc",
        "submission_list": [
            {
                "id": 288596913,
                "contestId": 2026,
                "creationTimeSeconds": 1730132491,
                "relativeTimeSeconds": 6391,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "dannalc"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "TIME_LIMIT_EXCEEDED",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 2000,
                "memoryConsumedBytes": 14028800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288565049,
                "contestId": 2026,
                "creationTimeSeconds": 1730129395,
                "relativeTimeSeconds": 3295,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "dannalc"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 140,
                "memoryConsumedBytes": 1740800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288552551,
                "contestId": 2026,
                "creationTimeSeconds": 1730128488,
                "relativeTimeSeconds": 2388,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "dannalc"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 749,
                "memoryConsumedBytes": 26316800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288538148,
                "contestId": 2026,
                "creationTimeSeconds": 1730127636,
                "relativeTimeSeconds": 1536,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "dannalc"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 1638400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288521503,
                "contestId": 2026,
                "creationTimeSeconds": 1730126768,
                "relativeTimeSeconds": 668,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "dannalc"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 1638400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288514794,
                "contestId": 2026,
                "creationTimeSeconds": 1730126460,
                "relativeTimeSeconds": 360,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "dannalc"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "chenhongrui",
        "submission_list": [
            {
                "id": 288565165,
                "contestId": 2026,
                "creationTimeSeconds": 1730129405,
                "relativeTimeSeconds": 3305,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "chenhongrui"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 12083200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288552909,
                "contestId": 2026,
                "creationTimeSeconds": 1730128516,
                "relativeTimeSeconds": 2415,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "chenhongrui"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 718,
                "memoryConsumedBytes": 36147200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288540483,
                "contestId": 2026,
                "creationTimeSeconds": 1730127765,
                "relativeTimeSeconds": 1665,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "chenhongrui"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 409600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288521668,
                "contestId": 2026,
                "creationTimeSeconds": 1730126776,
                "relativeTimeSeconds": 676,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "chenhongrui"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288512066,
                "contestId": 2026,
                "creationTimeSeconds": 1730126339,
                "relativeTimeSeconds": 239,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "chenhongrui"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "bmerry",
        "submission_list": [
            {
                "id": 289435066,
                "contestId": 2026,
                "creationTimeSeconds": 1730547388,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "bmerry"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 198,
                "timeConsumedMillis": 406,
                "memoryConsumedBytes": 397721600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288561108,
                "contestId": 2026,
                "creationTimeSeconds": 1730129096,
                "relativeTimeSeconds": 2996,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "bmerry"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 124,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288557011,
                "contestId": 2026,
                "creationTimeSeconds": 1730128799,
                "relativeTimeSeconds": 2699,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "bmerry"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288549206,
                "contestId": 2026,
                "creationTimeSeconds": 1730128274,
                "relativeTimeSeconds": 2174,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "bmerry"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288542913,
                "contestId": 2026,
                "creationTimeSeconds": 1730127902,
                "relativeTimeSeconds": 1802,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "bmerry"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 342,
                "memoryConsumedBytes": 9523200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288520697,
                "contestId": 2026,
                "creationTimeSeconds": 1730126731,
                "relativeTimeSeconds": 631,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "bmerry"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511936,
                "contestId": 2026,
                "creationTimeSeconds": 1730126333,
                "relativeTimeSeconds": 233,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "bmerry"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "Bostan-Mori",
        "submission_list": [
            {
                "id": 288569967,
                "contestId": 2026,
                "creationTimeSeconds": 1730129802,
                "relativeTimeSeconds": 3702,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Bostan-Mori"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 716800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288551588,
                "contestId": 2026,
                "creationTimeSeconds": 1730128425,
                "relativeTimeSeconds": 2325,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Bostan-Mori"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 359,
                "memoryConsumedBytes": 24371200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288538281,
                "contestId": 2026,
                "creationTimeSeconds": 1730127643,
                "relativeTimeSeconds": 1543,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Bostan-Mori"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 124,
                "memoryConsumedBytes": 10752000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288521796,
                "contestId": 2026,
                "creationTimeSeconds": 1730126782,
                "relativeTimeSeconds": 682,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Bostan-Mori"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288512165,
                "contestId": 2026,
                "creationTimeSeconds": 1730126344,
                "relativeTimeSeconds": 244,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Bostan-Mori"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "maspy",
        "submission_list": [
            {
                "id": 288608647,
                "contestId": 2026,
                "creationTimeSeconds": 1730133964,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "maspy"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "RUNTIME_ERROR",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 343,
                "memoryConsumedBytes": 398950400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288592152,
                "contestId": 2026,
                "creationTimeSeconds": 1730132008,
                "relativeTimeSeconds": 5908,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "maspy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 307200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288586107,
                "contestId": 2026,
                "creationTimeSeconds": 1730131405,
                "relativeTimeSeconds": 5305,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "maspy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 102,
                "timeConsumedMillis": 203,
                "memoryConsumedBytes": 485990400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288579806,
                "contestId": 2026,
                "creationTimeSeconds": 1730130790,
                "relativeTimeSeconds": 4690,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "maspy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "RUNTIME_ERROR",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 296,
                "memoryConsumedBytes": 399155200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288573045,
                "contestId": 2026,
                "creationTimeSeconds": 1730130128,
                "relativeTimeSeconds": 4028,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "maspy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "RUNTIME_ERROR",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 312,
                "memoryConsumedBytes": 398950400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288571831,
                "contestId": 2026,
                "creationTimeSeconds": 1730130009,
                "relativeTimeSeconds": 3909,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "maspy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "RUNTIME_ERROR",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 390,
                "memoryConsumedBytes": 398950400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288530811,
                "contestId": 2026,
                "creationTimeSeconds": 1730127250,
                "relativeTimeSeconds": 1150,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "maspy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 218,
                "memoryConsumedBytes": 12083200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288523908,
                "contestId": 2026,
                "creationTimeSeconds": 1730126886,
                "relativeTimeSeconds": 786,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "maspy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 140,
                "memoryConsumedBytes": 5939200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288516491,
                "contestId": 2026,
                "creationTimeSeconds": 1730126533,
                "relativeTimeSeconds": 433,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "maspy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 512000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511483,
                "contestId": 2026,
                "creationTimeSeconds": 1730126309,
                "relativeTimeSeconds": 209,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "maspy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 307200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510699,
                "contestId": 2026,
                "creationTimeSeconds": 1730126254,
                "relativeTimeSeconds": 154,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "maspy"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 31,
                "memoryConsumedBytes": 4300800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "potato167",
        "submission_list": [
            {
                "id": 288555309,
                "contestId": 2026,
                "creationTimeSeconds": 1730128675,
                "relativeTimeSeconds": 2575,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "potato167"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 375,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288549069,
                "contestId": 2026,
                "creationTimeSeconds": 1730128266,
                "relativeTimeSeconds": 2166,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "potato167"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 108,
                "memoryConsumedBytes": 921600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288542262,
                "contestId": 2026,
                "creationTimeSeconds": 1730127869,
                "relativeTimeSeconds": 1769,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "potato167"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 593,
                "memoryConsumedBytes": 11980800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288533225,
                "contestId": 2026,
                "creationTimeSeconds": 1730127372,
                "relativeTimeSeconds": 1272,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "potato167"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 3481600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288524730,
                "contestId": 2026,
                "creationTimeSeconds": 1730126926,
                "relativeTimeSeconds": 826,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "potato167"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 1,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511155,
                "contestId": 2026,
                "creationTimeSeconds": 1730126289,
                "relativeTimeSeconds": 189,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "potato167"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "w2y51c318",
        "submission_list": [
            {
                "id": 288824530,
                "contestId": 2026,
                "creationTimeSeconds": 1730251825,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "w2y51c318"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 198,
                "timeConsumedMillis": 733,
                "memoryConsumedBytes": 516915200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288583479,
                "contestId": 2026,
                "creationTimeSeconds": 1730131149,
                "relativeTimeSeconds": 5049,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "w2y51c318"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 7065600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288567793,
                "contestId": 2026,
                "creationTimeSeconds": 1730129614,
                "relativeTimeSeconds": 3514,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "w2y51c318"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 1,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 2150400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288539892,
                "contestId": 2026,
                "creationTimeSeconds": 1730127733,
                "relativeTimeSeconds": 1633,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "w2y51c318"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 374,
                "memoryConsumedBytes": 21401600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288527301,
                "contestId": 2026,
                "creationTimeSeconds": 1730127063,
                "relativeTimeSeconds": 963,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "w2y51c318"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 2560000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288516719,
                "contestId": 2026,
                "creationTimeSeconds": 1730126543,
                "relativeTimeSeconds": 443,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "w2y51c318"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 2150400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288516321,
                "contestId": 2026,
                "creationTimeSeconds": 1730126525,
                "relativeTimeSeconds": 425,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "w2y51c318"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "GNU C11",
                "verdict": "COMPILATION_ERROR",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 0,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510422,
                "contestId": 2026,
                "creationTimeSeconds": 1730126221,
                "relativeTimeSeconds": 121,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "w2y51c318"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 2150400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510327,
                "contestId": 2026,
                "creationTimeSeconds": 1730126204,
                "relativeTimeSeconds": 104,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "w2y51c318"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "GNU C11",
                "verdict": "COMPILATION_ERROR",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 0,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "propane",
        "submission_list": [
            {
                "id": 288683389,
                "contestId": 2026,
                "creationTimeSeconds": 1730186566,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 389,
                "memoryConsumedBytes": 404684800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288683317,
                "contestId": 2026,
                "creationTimeSeconds": 1730186524,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 328,
                "memoryConsumedBytes": 404480000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288683236,
                "contestId": 2026,
                "creationTimeSeconds": 1730186485,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 99,
                "timeConsumedMillis": 328,
                "memoryConsumedBytes": 400896000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288673180,
                "contestId": 2026,
                "creationTimeSeconds": 1730180696,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 4,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 7270400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288672569,
                "contestId": 2026,
                "creationTimeSeconds": 1730180331,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 99,
                "timeConsumedMillis": 296,
                "memoryConsumedBytes": 404787200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288671899,
                "contestId": 2026,
                "creationTimeSeconds": 1730179917,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 99,
                "timeConsumedMillis": 312,
                "memoryConsumedBytes": 401100800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288670543,
                "contestId": 2026,
                "creationTimeSeconds": 1730179172,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 358,
                "memoryConsumedBytes": 27340800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288669058,
                "contestId": 2026,
                "creationTimeSeconds": 1730178305,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 98,
                "timeConsumedMillis": 390,
                "memoryConsumedBytes": 23756800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288667983,
                "contestId": 2026,
                "creationTimeSeconds": 1730177653,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 99,
                "timeConsumedMillis": 312,
                "memoryConsumedBytes": 404684800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288604158,
                "contestId": 2026,
                "creationTimeSeconds": 1730133187,
                "relativeTimeSeconds": 7087,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 98,
                "timeConsumedMillis": 390,
                "memoryConsumedBytes": 23756800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288598476,
                "contestId": 2026,
                "creationTimeSeconds": 1730132653,
                "relativeTimeSeconds": 6553,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 3,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 21299200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288560395,
                "contestId": 2026,
                "creationTimeSeconds": 1730129042,
                "relativeTimeSeconds": 2942,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 78,
                "memoryConsumedBytes": 25702400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288551933,
                "contestId": 2026,
                "creationTimeSeconds": 1730128448,
                "relativeTimeSeconds": 2348,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 390,
                "memoryConsumedBytes": 9523200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288538831,
                "contestId": 2026,
                "creationTimeSeconds": 1730127676,
                "relativeTimeSeconds": 1576,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288525218,
                "contestId": 2026,
                "creationTimeSeconds": 1730126953,
                "relativeTimeSeconds": 853,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288519461,
                "contestId": 2026,
                "creationTimeSeconds": 1730126669,
                "relativeTimeSeconds": 569,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 1,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288518274,
                "contestId": 2026,
                "creationTimeSeconds": 1730126613,
                "relativeTimeSeconds": 513,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 1,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511366,
                "contestId": 2026,
                "creationTimeSeconds": 1730126301,
                "relativeTimeSeconds": 201,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "propane"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "VasyaMer",
        "submission_list": [
            {
                "id": 288571266,
                "contestId": 2026,
                "creationTimeSeconds": 1730129936,
                "relativeTimeSeconds": 3836,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "VasyaMer"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 389,
                "memoryConsumedBytes": 10854400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288556446,
                "contestId": 2026,
                "creationTimeSeconds": 1730128759,
                "relativeTimeSeconds": 2658,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "VasyaMer"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 358,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "VasyaMer",
        "submission_list": [
            {
                "id": 288571266,
                "contestId": 2026,
                "creationTimeSeconds": 1730129936,
                "relativeTimeSeconds": 3836,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "VasyaMer"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 389,
                "memoryConsumedBytes": 10854400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288556446,
                "contestId": 2026,
                "creationTimeSeconds": 1730128759,
                "relativeTimeSeconds": 2658,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "VasyaMer"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 358,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288542183,
                "contestId": 2026,
                "creationTimeSeconds": 1730127863,
                "relativeTimeSeconds": 1763,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "VasyaMer"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 155,
                "memoryConsumedBytes": 17612800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288528371,
                "contestId": 2026,
                "creationTimeSeconds": 1730127119,
                "relativeTimeSeconds": 1019,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "VasyaMer"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288523120,
                "contestId": 2026,
                "creationTimeSeconds": 1730126848,
                "relativeTimeSeconds": 748,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "VasyaMer"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 4,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288512060,
                "contestId": 2026,
                "creationTimeSeconds": 1730126339,
                "relativeTimeSeconds": 239,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "VasyaMer"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511115,
                "contestId": 2026,
                "creationTimeSeconds": 1730126287,
                "relativeTimeSeconds": 187,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "VasyaMer"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 31,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "TheRizzler",
        "submission_list": [
            {
                "id": 288575886,
                "contestId": 2026,
                "creationTimeSeconds": 1730130431,
                "relativeTimeSeconds": 4331,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "TheRizzler"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 124,
                "memoryConsumedBytes": 1024000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288565617,
                "contestId": 2026,
                "creationTimeSeconds": 1730129444,
                "relativeTimeSeconds": 3344,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "TheRizzler"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 655,
                "memoryConsumedBytes": 14438400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288535101,
                "contestId": 2026,
                "creationTimeSeconds": 1730127470,
                "relativeTimeSeconds": 1370,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "TheRizzler"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 108,
                "memoryConsumedBytes": 3891200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288523131,
                "contestId": 2026,
                "creationTimeSeconds": 1730126849,
                "relativeTimeSeconds": 749,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "TheRizzler"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288512363,
                "contestId": 2026,
                "creationTimeSeconds": 1730126353,
                "relativeTimeSeconds": 253,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "TheRizzler"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 109,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510992,
                "contestId": 2026,
                "creationTimeSeconds": 1730126278,
                "relativeTimeSeconds": 178,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "TheRizzler"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 4198400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "warner1129",
        "submission_list": [
            {
                "id": 288658980,
                "contestId": 2026,
                "creationTimeSeconds": 1730170368,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "warner1129"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 218,
                "memoryConsumedBytes": 485683200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288658959,
                "contestId": 2026,
                "creationTimeSeconds": 1730170345,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "warner1129"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "COMPILATION_ERROR",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 0,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288658888,
                "contestId": 2026,
                "creationTimeSeconds": 1730170274,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "warner1129"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 328,
                "memoryConsumedBytes": 400896000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288658072,
                "contestId": 2026,
                "creationTimeSeconds": 1730169446,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "warner1129"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 234,
                "memoryConsumedBytes": 245350400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288657833,
                "contestId": 2026,
                "creationTimeSeconds": 1730169198,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "warner1129"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 98,
                "timeConsumedMillis": 265,
                "memoryConsumedBytes": 245350400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288570418,
                "contestId": 2026,
                "creationTimeSeconds": 1730129842,
                "relativeTimeSeconds": 3742,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "warner1129"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288561847,
                "contestId": 2026,
                "creationTimeSeconds": 1730129149,
                "relativeTimeSeconds": 3049,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "warner1129"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 483,
                "memoryConsumedBytes": 20787200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288548885,
                "contestId": 2026,
                "creationTimeSeconds": 1730128252,
                "relativeTimeSeconds": 2152,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "warner1129"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288524971,
                "contestId": 2026,
                "creationTimeSeconds": 1730126940,
                "relativeTimeSeconds": 840,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "warner1129"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288512886,
                "contestId": 2026,
                "creationTimeSeconds": 1730126376,
                "relativeTimeSeconds": 276,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "warner1129"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "toam",
        "submission_list": [
            {
                "id": 288577866,
                "contestId": 2026,
                "creationTimeSeconds": 1730130613,
                "relativeTimeSeconds": 4513,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "toam"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 468,
                "memoryConsumedBytes": 18636800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288566544,
                "contestId": 2026,
                "creationTimeSeconds": 1730129515,
                "relativeTimeSeconds": 3415,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "toam"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 827,
                "memoryConsumedBytes": 39219200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288562496,
                "contestId": 2026,
                "creationTimeSeconds": 1730129197,
                "relativeTimeSeconds": 3097,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "toam"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 3,
                "timeConsumedMillis": 171,
                "memoryConsumedBytes": 8908800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288532057,
                "contestId": 2026,
                "creationTimeSeconds": 1730127311,
                "relativeTimeSeconds": 1211,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "toam"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 156,
                "memoryConsumedBytes": 17920000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288514325,
                "contestId": 2026,
                "creationTimeSeconds": 1730126438,
                "relativeTimeSeconds": 338,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "toam"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 109,
                "memoryConsumedBytes": 5222400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510435,
                "contestId": 2026,
                "creationTimeSeconds": 1730126224,
                "relativeTimeSeconds": 124,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "toam"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 171,
                "memoryConsumedBytes": 6656000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "StarSilk",
        "submission_list": [
            {
                "id": 288621474,
                "contestId": 2026,
                "creationTimeSeconds": 1730138406,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "StarSilk"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 1515,
                "memoryConsumedBytes": 258355200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288621123,
                "contestId": 2026,
                "creationTimeSeconds": 1730138269,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "StarSilk"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 1967,
                "memoryConsumedBytes": 258150400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288620776,
                "contestId": 2026,
                "creationTimeSeconds": 1730138136,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "StarSilk"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 1952,
                "memoryConsumedBytes": 254156800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288620408,
                "contestId": 2026,
                "creationTimeSeconds": 1730138002,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "StarSilk"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 1812,
                "memoryConsumedBytes": 254156800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288620245,
                "contestId": 2026,
                "creationTimeSeconds": 1730137935,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "StarSilk"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 1843,
                "memoryConsumedBytes": 254156800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288619841,
                "contestId": 2026,
                "creationTimeSeconds": 1730137762,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "StarSilk"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "TIME_LIMIT_EXCEEDED",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 2000,
                "memoryConsumedBytes": 258150400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288563896,
                "contestId": 2026,
                "creationTimeSeconds": 1730129304,
                "relativeTimeSeconds": 3204,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "StarSilk"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 48128000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288558647,
                "contestId": 2026,
                "creationTimeSeconds": 1730128916,
                "relativeTimeSeconds": 2816,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "StarSilk"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 453,
                "memoryConsumedBytes": 9625600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288543753,
                "contestId": 2026,
                "creationTimeSeconds": 1730127951,
                "relativeTimeSeconds": 1851,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "StarSilk"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 409600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288534396,
                "contestId": 2026,
                "creationTimeSeconds": 1730127433,
                "relativeTimeSeconds": 1333,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "StarSilk"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288529735,
                "contestId": 2026,
                "creationTimeSeconds": 1730127192,
                "relativeTimeSeconds": 1092,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "StarSilk"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "liouzhou_101",
        "submission_list": [
            {
                "id": 288570527,
                "contestId": 2026,
                "creationTimeSeconds": 1730129855,
                "relativeTimeSeconds": 3755,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "liouzhou_101"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 2150400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288555701,
                "contestId": 2026,
                "creationTimeSeconds": 1730128704,
                "relativeTimeSeconds": 2604,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "liouzhou_101"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 265,
                "memoryConsumedBytes": 23859200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288544285,
                "contestId": 2026,
                "creationTimeSeconds": 1730127982,
                "relativeTimeSeconds": 1882,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "liouzhou_101"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 2150400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288529790,
                "contestId": 2026,
                "creationTimeSeconds": 1730127195,
                "relativeTimeSeconds": 1095,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "liouzhou_101"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 2150400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288526310,
                "contestId": 2026,
                "creationTimeSeconds": 1730127010,
                "relativeTimeSeconds": 910,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "liouzhou_101"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 2150400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288516691,
                "contestId": 2026,
                "creationTimeSeconds": 1730126542,
                "relativeTimeSeconds": 442,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "liouzhou_101"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 2150400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288514184,
                "contestId": 2026,
                "creationTimeSeconds": 1730126433,
                "relativeTimeSeconds": 333,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "liouzhou_101"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 2150400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "turkhuu622",
        "submission_list": [
            {
                "id": 288805047,
                "contestId": 2026,
                "creationTimeSeconds": 1730231596,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "turkhuu622"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "RUNTIME_ERROR",
                "testset": "TESTS",
                "passedTestCount": 100,
                "timeConsumedMillis": 296,
                "memoryConsumedBytes": 391065600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288705230,
                "contestId": 2026,
                "creationTimeSeconds": 1730195424,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "turkhuu622"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "MEMORY_LIMIT_EXCEEDED",
                "testset": "TESTS",
                "passedTestCount": 190,
                "timeConsumedMillis": 546,
                "memoryConsumedBytes": 1073766400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288704029,
                "contestId": 2026,
                "creationTimeSeconds": 1730194939,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "turkhuu622"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "RUNTIME_ERROR",
                "testset": "TESTS",
                "passedTestCount": 100,
                "timeConsumedMillis": 311,
                "memoryConsumedBytes": 394342400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288608232,
                "contestId": 2026,
                "creationTimeSeconds": 1730133851,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "turkhuu622"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "MEMORY_LIMIT_EXCEEDED",
                "testset": "TESTS",
                "passedTestCount": 190,
                "timeConsumedMillis": 828,
                "memoryConsumedBytes": 1073766400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288605968,
                "contestId": 2026,
                "creationTimeSeconds": 1730133299,
                "relativeTimeSeconds": 7199,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "turkhuu622"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 15,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288575304,
                "contestId": 2026,
                "creationTimeSeconds": 1730130374,
                "relativeTimeSeconds": 4274,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "turkhuu622"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 139,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288562011,
                "contestId": 2026,
                "creationTimeSeconds": 1730129161,
                "relativeTimeSeconds": 3061,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "turkhuu622"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 343,
                "memoryConsumedBytes": 4812800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288548390,
                "contestId": 2026,
                "creationTimeSeconds": 1730128223,
                "relativeTimeSeconds": 2123,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "turkhuu622"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288519528,
                "contestId": 2026,
                "creationTimeSeconds": 1730126672,
                "relativeTimeSeconds": 572,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "turkhuu622"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288513466,
                "contestId": 2026,
                "creationTimeSeconds": 1730126400,
                "relativeTimeSeconds": 300,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "turkhuu622"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510529,
                "contestId": 2026,
                "creationTimeSeconds": 1730126236,
                "relativeTimeSeconds": 136,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "turkhuu622"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 30,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "Egor",
        "submission_list": [
            {
                "id": 288561837,
                "contestId": 2026,
                "creationTimeSeconds": 1730129148,
                "relativeTimeSeconds": 3048,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Egor"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Rust 2021",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 108,
                "memoryConsumedBytes": 204800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288556646,
                "contestId": 2026,
                "creationTimeSeconds": 1730128771,
                "relativeTimeSeconds": 2670,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Egor"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Rust 2021",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 296,
                "memoryConsumedBytes": 8089600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288554696,
                "contestId": 2026,
                "creationTimeSeconds": 1730128634,
                "relativeTimeSeconds": 2534,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Egor"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Rust 2021",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 3,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 4096000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288553492,
                "contestId": 2026,
                "creationTimeSeconds": 1730128556,
                "relativeTimeSeconds": 2456,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Egor"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Rust 2021",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 2,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288537406,
                "contestId": 2026,
                "creationTimeSeconds": 1730127594,
                "relativeTimeSeconds": 1494,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Egor"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Rust 2021",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 4198400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288529877,
                "contestId": 2026,
                "creationTimeSeconds": 1730127201,
                "relativeTimeSeconds": 1101,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Egor"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Rust 2021",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288526924,
                "contestId": 2026,
                "creationTimeSeconds": 1730127043,
                "relativeTimeSeconds": 943,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Egor"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Rust 2021",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288524315,
                "contestId": 2026,
                "creationTimeSeconds": 1730126907,
                "relativeTimeSeconds": 807,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Egor"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "Rust 2021",
                "verdict": "COMPILATION_ERROR",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 0,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "Auroraa_",
        "submission_list": [
            {
                "id": 288768130,
                "contestId": 2026,
                "creationTimeSeconds": 1730218640,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Auroraa_"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 198,
                "timeConsumedMillis": 624,
                "memoryConsumedBytes": 520192000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288762945,
                "contestId": 2026,
                "creationTimeSeconds": 1730216720,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Auroraa_"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 98,
                "timeConsumedMillis": 359,
                "memoryConsumedBytes": 520192000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288703930,
                "contestId": 2026,
                "creationTimeSeconds": 1730194893,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Auroraa_"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 327,
                "memoryConsumedBytes": 48640000,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288582839,
                "contestId": 2026,
                "creationTimeSeconds": 1730131085,
                "relativeTimeSeconds": 4985,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Auroraa_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 109,
                "memoryConsumedBytes": 25702400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288578290,
                "contestId": 2026,
                "creationTimeSeconds": 1730130650,
                "relativeTimeSeconds": 4550,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Auroraa_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "TIME_LIMIT_EXCEEDED",
                "testset": "TESTS",
                "passedTestCount": 4,
                "timeConsumedMillis": 2000,
                "memoryConsumedBytes": 1126400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288553832,
                "contestId": 2026,
                "creationTimeSeconds": 1730128577,
                "relativeTimeSeconds": 2477,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Auroraa_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 6963200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288535837,
                "contestId": 2026,
                "creationTimeSeconds": 1730127511,
                "relativeTimeSeconds": 1411,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Auroraa_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 327,
                "memoryConsumedBytes": 52121600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288522212,
                "contestId": 2026,
                "creationTimeSeconds": 1730126803,
                "relativeTimeSeconds": 703,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Auroraa_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 3276800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288513565,
                "contestId": 2026,
                "creationTimeSeconds": 1730126405,
                "relativeTimeSeconds": 305,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Auroraa_"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "lucifer1004",
        "submission_list": [
            {
                "id": 288582332,
                "contestId": 2026,
                "creationTimeSeconds": 1730131038,
                "relativeTimeSeconds": 4938,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "lucifer1004"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288565573,
                "contestId": 2026,
                "creationTimeSeconds": 1730129439,
                "relativeTimeSeconds": 3339,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "lucifer1004"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 1046,
                "memoryConsumedBytes": 96972800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288538344,
                "contestId": 2026,
                "creationTimeSeconds": 1730127647,
                "relativeTimeSeconds": 1547,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "lucifer1004"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 124,
                "memoryConsumedBytes": 13414400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288519043,
                "contestId": 2026,
                "creationTimeSeconds": 1730126650,
                "relativeTimeSeconds": 550,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "lucifer1004"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 109,
                "memoryConsumedBytes": 2355200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288512094,
                "contestId": 2026,
                "creationTimeSeconds": 1730126341,
                "relativeTimeSeconds": 241,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "lucifer1004"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 171,
                "memoryConsumedBytes": 6758400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511800,
                "contestId": 2026,
                "creationTimeSeconds": 1730126325,
                "relativeTimeSeconds": 225,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "lucifer1004"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "COMPILATION_ERROR",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 0,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "divergence1",
        "submission_list": [
            {
                "id": 288587805,
                "contestId": 2026,
                "creationTimeSeconds": 1730131575,
                "relativeTimeSeconds": 5475,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "divergence1"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 716800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288555877,
                "contestId": 2026,
                "creationTimeSeconds": 1730128715,
                "relativeTimeSeconds": 2615,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "divergence1"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 468,
                "memoryConsumedBytes": 7270400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288541790,
                "contestId": 2026,
                "creationTimeSeconds": 1730127839,
                "relativeTimeSeconds": 1739,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "divergence1"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 3686400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288523428,
                "contestId": 2026,
                "creationTimeSeconds": 1730126862,
                "relativeTimeSeconds": 762,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "divergence1"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511330,
                "contestId": 2026,
                "creationTimeSeconds": 1730126300,
                "relativeTimeSeconds": 200,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "divergence1"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "ETO-leader",
        "submission_list": [
            {
                "id": 288572236,
                "contestId": 2026,
                "creationTimeSeconds": 1730130060,
                "relativeTimeSeconds": 3960,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ETO-leader"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 78,
                "memoryConsumedBytes": 307200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288565670,
                "contestId": 2026,
                "creationTimeSeconds": 1730129447,
                "relativeTimeSeconds": 3347,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ETO-leader"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 687,
                "memoryConsumedBytes": 14950400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288550639,
                "contestId": 2026,
                "creationTimeSeconds": 1730128364,
                "relativeTimeSeconds": 2264,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ETO-leader"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 3788800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288545093,
                "contestId": 2026,
                "creationTimeSeconds": 1730128029,
                "relativeTimeSeconds": 1929,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ETO-leader"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 1,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288519736,
                "contestId": 2026,
                "creationTimeSeconds": 1730126681,
                "relativeTimeSeconds": 581,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ETO-leader"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511113,
                "contestId": 2026,
                "creationTimeSeconds": 1730126286,
                "relativeTimeSeconds": 186,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "ETO-leader"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++23 (GCC 14-64, msys2)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "kmjp",
        "submission_list": [
            {
                "id": 288577588,
                "contestId": 2026,
                "creationTimeSeconds": 1730130592,
                "relativeTimeSeconds": 4492,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "kmjp"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288565275,
                "contestId": 2026,
                "creationTimeSeconds": 1730129415,
                "relativeTimeSeconds": 3315,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "kmjp"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 827,
                "memoryConsumedBytes": 13414400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288559049,
                "contestId": 2026,
                "creationTimeSeconds": 1730128947,
                "relativeTimeSeconds": 2847,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "kmjp"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 3,
                "timeConsumedMillis": 421,
                "memoryConsumedBytes": 13414400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288556509,
                "contestId": 2026,
                "creationTimeSeconds": 1730128762,
                "relativeTimeSeconds": 2662,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "kmjp"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 3,
                "timeConsumedMillis": 421,
                "memoryConsumedBytes": 18227200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288554224,
                "contestId": 2026,
                "creationTimeSeconds": 1730128604,
                "relativeTimeSeconds": 2504,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "kmjp"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 18227200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288535268,
                "contestId": 2026,
                "creationTimeSeconds": 1730127481,
                "relativeTimeSeconds": 1381,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "kmjp"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 124,
                "memoryConsumedBytes": 11571200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288515855,
                "contestId": 2026,
                "creationTimeSeconds": 1730126503,
                "relativeTimeSeconds": 403,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "kmjp"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288511878,
                "contestId": 2026,
                "creationTimeSeconds": 1730126330,
                "relativeTimeSeconds": 230,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "kmjp"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++17 (GCC 7-32)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 93,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "tarjen",
        "submission_list": [
            {
                "id": 288570824,
                "contestId": 2026,
                "creationTimeSeconds": 1730129888,
                "relativeTimeSeconds": 3788,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "tarjen"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 921600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288564352,
                "contestId": 2026,
                "creationTimeSeconds": 1730129341,
                "relativeTimeSeconds": 3241,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "tarjen"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 421,
                "memoryConsumedBytes": 15769600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288545639,
                "contestId": 2026,
                "creationTimeSeconds": 1730128058,
                "relativeTimeSeconds": 1958,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "tarjen"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 921600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288532708,
                "contestId": 2026,
                "creationTimeSeconds": 1730127345,
                "relativeTimeSeconds": 1245,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "tarjen"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 61,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288525259,
                "contestId": 2026,
                "creationTimeSeconds": 1730126955,
                "relativeTimeSeconds": 855,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "tarjen"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 77,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288524092,
                "contestId": 2026,
                "creationTimeSeconds": 1730126895,
                "relativeTimeSeconds": 795,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "tarjen"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288514618,
                "contestId": 2026,
                "creationTimeSeconds": 1730126450,
                "relativeTimeSeconds": 350,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "tarjen"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 46,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288513633,
                "contestId": 2026,
                "creationTimeSeconds": 1730126408,
                "relativeTimeSeconds": 308,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "tarjen"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 31,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288510484,
                "contestId": 2026,
                "creationTimeSeconds": 1730126231,
                "relativeTimeSeconds": 131,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "tarjen"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "WRONG_ANSWER",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 31,
                "memoryConsumedBytes": 0,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "Shirotsume",
        "submission_list": [
            {
                "id": 288579384,
                "contestId": 2026,
                "creationTimeSeconds": 1730130749,
                "relativeTimeSeconds": 4649,
                "problem": {
                    "contestId": 2026,
                    "index": "E",
                    "name": "Best Subsequence",
                    "type": "PROGRAMMING",
                    "rating": 2500,
                    "tags": [
                        "bitmasks",
                        "dfs and similar",
                        "flows",
                        "graph matchings",
                        "graphs"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Shirotsume"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 54,
                "timeConsumedMillis": 874,
                "memoryConsumedBytes": 27340800,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288567777,
                "contestId": 2026,
                "creationTimeSeconds": 1730129612,
                "relativeTimeSeconds": 3512,
                "problem": {
                    "contestId": 2026,
                    "index": "D",
                    "name": "Sums of Segments",
                    "type": "PROGRAMMING",
                    "rating": 1900,
                    "tags": [
                        "binary search",
                        "data structures",
                        "dp",
                        "implementation",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Shirotsume"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 21,
                "timeConsumedMillis": 827,
                "memoryConsumedBytes": 42291200,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288542533,
                "contestId": 2026,
                "creationTimeSeconds": 1730127881,
                "relativeTimeSeconds": 1781,
                "problem": {
                    "contestId": 2026,
                    "index": "C",
                    "name": "Action Figures",
                    "type": "PROGRAMMING",
                    "rating": 1500,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "data structures",
                        "greedy",
                        "implementation"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Shirotsume"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 10,
                "timeConsumedMillis": 140,
                "memoryConsumedBytes": 5529600,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288524635,
                "contestId": 2026,
                "creationTimeSeconds": 1730126922,
                "relativeTimeSeconds": 822,
                "problem": {
                    "contestId": 2026,
                    "index": "B",
                    "name": "Black Cells",
                    "type": "PROGRAMMING",
                    "rating": 1300,
                    "tags": [
                        "binary search",
                        "brute force",
                        "constructive algorithms",
                        "greedy"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Shirotsume"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 9,
                "timeConsumedMillis": 749,
                "memoryConsumedBytes": 9318400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288517684,
                "contestId": 2026,
                "creationTimeSeconds": 1730126586,
                "relativeTimeSeconds": 486,
                "problem": {
                    "contestId": 2026,
                    "index": "A",
                    "name": "Perpendicular Segments",
                    "type": "PROGRAMMING",
                    "rating": 900,
                    "tags": [
                        "constructive algorithms",
                        "geometry",
                        "greedy",
                        "math"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "Shirotsume"
                        }
                    ],
                    "participantType": "CONTESTANT",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "PyPy 3-64",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 19,
                "timeConsumedMillis": 171,
                "memoryConsumedBytes": 8294400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    },
    {
        "handle": "noya2",
        "submission_list": [
            {
                "id": 288607168,
                "contestId": 2026,
                "creationTimeSeconds": 1730133594,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "noya2"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "OK",
                "testset": "TESTS",
                "passedTestCount": 197,
                "timeConsumedMillis": 546,
                "memoryConsumedBytes": 261734400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            },
            {
                "id": 288606736,
                "contestId": 2026,
                "creationTimeSeconds": 1730133503,
                "relativeTimeSeconds": 2147483647,
                "problem": {
                    "contestId": 2026,
                    "index": "F",
                    "name": "Bermart Ice Cream",
                    "type": "PROGRAMMING",
                    "rating": 2700,
                    "tags": [
                        "data structures",
                        "dfs and similar",
                        "divide and conquer",
                        "dp",
                        "implementation",
                        "trees"
                    ]
                },
                "author": {
                    "contestId": 2026,
                    "members": [
                        {
                            "handle": "noya2"
                        }
                    ],
                    "participantType": "PRACTICE",
                    "ghost": false,
                    "startTimeSeconds": 1730126100
                },
                "programmingLanguage": "C++20 (GCC 13-64)",
                "verdict": "RUNTIME_ERROR",
                "testset": "TESTS",
                "passedTestCount": 0,
                "timeConsumedMillis": 62,
                "memoryConsumedBytes": 102400,
                "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
            }
        ]
    }
]