[{"handle": "ksun48", "submission_list": [{"id": 288561266, "contestId": 2026, "creationTimeSeconds": 1730129107, "relativeTimeSeconds": 3007, "problem": {"contestId": 2026, "index": "F", "name": "Bermart Ice Cream", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "implementation", "trees"]}, "author": {"contestId": 2026, "members": [{"handle": "ksun48"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++20 (GCC 13-64)", "verdict": "OK", "testset": "TESTS", "passedTestCount": 197, "timeConsumedMillis": 1155, "memoryConsumedBytes": 389939200, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288532750, "contestId": 2026, "creationTimeSeconds": 1730127347, "relativeTimeSeconds": 1247, "problem": {"contestId": 2026, "index": "E", "name": "Best Subsequence", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dfs and similar", "flows", "graph matchings", "graphs"]}, "author": {"contestId": 2026, "members": [{"handle": "ksun48"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++20 (GCC 13-64)", "verdict": "OK", "testset": "TESTS", "passedTestCount": 54, "timeConsumedMillis": 77, "memoryConsumedBytes": 102400, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288529378, "contestId": 2026, "creationTimeSeconds": 1730127174, "relativeTimeSeconds": 1074, "problem": {"contestId": 2026, "index": "C", "name": "Action Figures", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "implementation"]}, "author": {"contestId": 2026, "members": [{"handle": "ksun48"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++20 (GCC 13-64)", "verdict": "OK", "testset": "TESTS", "passedTestCount": 10, "timeConsumedMillis": 155, "memoryConsumedBytes": 21196800, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288525443, "contestId": 2026, "creationTimeSeconds": 1730126964, "relativeTimeSeconds": 864, "problem": {"contestId": 2026, "index": "D", "name": "Sums of Segments", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dp", "implementation", "math"]}, "author": {"contestId": 2026, "members": [{"handle": "ksun48"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++20 (GCC 13-64)", "verdict": "OK", "testset": "TESTS", "passedTestCount": 21, "timeConsumedMillis": 343, "memoryConsumedBytes": 8396800, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288518474, "contestId": 2026, "creationTimeSeconds": 1730126622, "relativeTimeSeconds": 522, "problem": {"contestId": 2026, "index": "C", "name": "Action Figures", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "implementation"]}, "author": {"contestId": 2026, "members": [{"handle": "ksun48"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++20 (GCC 13-64)", "verdict": "WRONG_ANSWER", "testset": "TESTS", "passedTestCount": 0, "timeConsumedMillis": 62, "memoryConsumedBytes": 0, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288512906, "contestId": 2026, "creationTimeSeconds": 1730126377, "relativeTimeSeconds": 277, "problem": {"contestId": 2026, "index": "B", "name": "Black Cells", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "constructive algorithms", "greedy"]}, "author": {"contestId": 2026, "members": [{"handle": "ksun48"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++20 (GCC 13-64)", "verdict": "OK", "testset": "TESTS", "passedTestCount": 9, "timeConsumedMillis": 61, "memoryConsumedBytes": 0, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288510200, "contestId": 2026, "creationTimeSeconds": 1730126155, "relativeTimeSeconds": 55, "problem": {"contestId": 2026, "index": "A", "name": "Perpendicular Segments", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "geometry", "greedy", "math"]}, "author": {"contestId": 2026, "members": [{"handle": "ksun48"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++20 (GCC 13-64)", "verdict": "OK", "testset": "TESTS", "passedTestCount": 19, "timeConsumedMillis": 62, "memoryConsumedBytes": 0, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}]},{"handle": "arvindf232", "submission_list": [{"id": 288648436, "contestId": 2026, "creationTimeSeconds": 1730156176, "relativeTimeSeconds": 2147483647, "problem": {"contestId": 2026, "index": "E", "name": "Best Subsequence", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dfs and similar", "flows", "graph matchings", "graphs"]}, "author": {"contestId": 2026, "members": [{"handle": "arvindf232"}], "participantType": "PRACTICE", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++23 (GCC 14-64, msys2)", "verdict": "OK", "testset": "TESTS", "passedTestCount": 54, "timeConsumedMillis": 92, "memoryConsumedBytes": 102400, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288648421, "contestId": 2026, "creationTimeSeconds": 1730156137, "relativeTimeSeconds": 2147483647, "problem": {"contestId": 2026, "index": "E", "name": "Best Subsequence", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dfs and similar", "flows", "graph matchings", "graphs"]}, "author": {"contestId": 2026, "members": [{"handle": "arvindf232"}], "participantType": "PRACTICE", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "PyPy 3", "verdict": "TIME_LIMIT_EXCEEDED", "testset": "TESTS", "passedTestCount": 11, "timeConsumedMillis": 2000, "memoryConsumedBytes": 16076800, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288648408, "contestId": 2026, "creationTimeSeconds": 1730156122, "relativeTimeSeconds": 2147483647, "problem": {"contestId": 2026, "index": "E", "name": "Best Subsequence", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dfs and similar", "flows", "graph matchings", "graphs"]}, "author": {"contestId": 2026, "members": [{"handle": "arvindf232"}], "participantType": "PRACTICE", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "PyPy 3", "verdict": "MEMORY_LIMIT_EXCEEDED", "testset": "TESTS", "passedTestCount": 0, "timeConsumedMillis": 93, "memoryConsumedBytes": 268390400, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288648392, "contestId": 2026, "creationTimeSeconds": 1730156099, "relativeTimeSeconds": 2147483647, "problem": {"contestId": 2026, "index": "E", "name": "Best Subsequence", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dfs and similar", "flows", "graph matchings", "graphs"]}, "author": {"contestId": 2026, "members": [{"handle": "arvindf232"}], "participantType": "PRACTICE", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "PyPy 3", "verdict": "MEMORY_LIMIT_EXCEEDED", "testset": "TESTS", "passedTestCount": 0, "timeConsumedMillis": 93, "memoryConsumedBytes": 268390400, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288568739, "contestId": 2026, "creationTimeSeconds": 1730129695, "relativeTimeSeconds": 3595, "problem": {"contestId": 2026, "index": "F", "name": "Bermart Ice Cream", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "implementation", "trees"]}, "author": {"contestId": 2026, "members": [{"handle": "arvindf232"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "Kotlin 1.9", "verdict": "OK", "testset": "TESTS", "passedTestCount": 197, "timeConsumedMillis": 609, "memoryConsumedBytes": 369049600, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288541409, "contestId": 2026, "creationTimeSeconds": 1730127818, "relativeTimeSeconds": 1718, "problem": {"contestId": 2026, "index": "E", "name": "Best Subsequence", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dfs and similar", "flows", "graph matchings", "graphs"]}, "author": {"contestId": 2026, "members": [{"handle": "arvindf232"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "Kotlin 1.9", "verdict": "OK", "testset": "TESTS", "passedTestCount": 54, "timeConsumedMillis": 234, "memoryConsumedBytes": 1331200, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288536560, "contestId": 2026, "creationTimeSeconds": 1730127549, "relativeTimeSeconds": 1449, "problem": {"contestId": 2026, "index": "D", "name": "Sums of Segments", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dp", "implementation", "math"]}, "author": {"contestId": 2026, "members": [{"handle": "arvindf232"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "Kotlin 1.9", "verdict": "OK", "testset": "TESTS", "passedTestCount": 21, "timeConsumedMillis": 1265, "memoryConsumedBytes": 33280000, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288528126, "contestId": 2026, "creationTimeSeconds": 1730127105, "relativeTimeSeconds": 1005, "problem": {"contestId": 2026, "index": "C", "name": "Action Figures", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "implementation"]}, "author": {"contestId": 2026, "members": [{"handle": "arvindf232"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "Kotlin 1.9", "verdict": "OK", "testset": "TESTS", "passedTestCount": 10, "timeConsumedMillis": 187, "memoryConsumedBytes": 0, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288513946, "contestId": 2026, "creationTimeSeconds": 1730126421, "relativeTimeSeconds": 321, "problem": {"contestId": 2026, "index": "B", "name": "Black Cells", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "constructive algorithms", "greedy"]}, "author": {"contestId": 2026, "members": [{"handle": "arvindf232"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "Kotlin 1.9", "verdict": "OK", "testset": "TESTS", "passedTestCount": 9, "timeConsumedMillis": 218, "memoryConsumedBytes": 1228800, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288510663, "contestId": 2026, "creationTimeSeconds": 1730126250, "relativeTimeSeconds": 150, "problem": {"contestId": 2026, "index": "A", "name": "Perpendicular Segments", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "geometry", "greedy", "math"]}, "author": {"contestId": 2026, "members": [{"handle": "arvindf232"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "Kotlin 1.9", "verdict": "OK", "testset": "TESTS", "passedTestCount": 19, "timeConsumedMillis": 187, "memoryConsumedBytes": 0, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}]},{"handle": "neal", "submission_list": [{"id": 289460762, "contestId": 2026, "creationTimeSeconds": 1730557361, "relativeTimeSeconds": 2147483647, "problem": {"contestId": 2026, "index": "F", "name": "Bermart Ice Cream", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "implementation", "trees"]}, "author": {"contestId": 2026, "members": [{"handle": "neal"}], "participantType": "PRACTICE", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++23 (GCC 14-64, msys2)", "verdict": "OK", "testset": "TESTS", "passedTestCount": 198, "timeConsumedMillis": 390, "memoryConsumedBytes": 398643200, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 289460758, "contestId": 2026, "creationTimeSeconds": 1730557361, "relativeTimeSeconds": 2147483647, "problem": {"contestId": 2026, "index": "E", "name": "Best Subsequence", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dfs and similar", "flows", "graph matchings", "graphs"]}, "author": {"contestId": 2026, "members": [{"handle": "neal"}], "participantType": "PRACTICE", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++23 (GCC 14-64, msys2)", "verdict": "OK", "testset": "TESTS", "passedTestCount": 54, "timeConsumedMillis": 78, "memoryConsumedBytes": 0, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288610204, "contestId": 2026, "creationTimeSeconds": 1730134406, "relativeTimeSeconds": 2147483647, "problem": {"contestId": 2026, "index": "F", "name": "Bermart Ice Cream", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "implementation", "trees"]}, "author": {"contestId": 2026, "members": [{"handle": "neal"}], "participantType": "PRACTICE", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++23 (GCC 14-64, msys2)", "verdict": "OK", "testset": "TESTS", "passedTestCount": 197, "timeConsumedMillis": 1233, "memoryConsumedBytes": 247193600, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}, {"id": 288597833, "contestId": 2026, "creationTimeSeconds": 1730132587, "relativeTimeSeconds": 6487, "problem": {"contestId": 2026, "index": "F", "name": "Bermart Ice Cream", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "implementation", "trees"]}, "author": {"contestId": 2026, "members": [{"handle": "neal"}], "participantType": "CONTESTANT", "ghost": false, "startTimeSeconds": 1730126100}, "programmingLanguage": "C++23 (GCC 14-64, msys2)", "verdict": "OK", "testset": "TESTS", "passedTestCount": 197, "timeConsumedMillis": 1233, "memoryConsumedBytes": 248524800, "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"}]}]