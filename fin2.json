"#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n\u00a0\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define ll long long\n#define pb emplace_back\n#define ull unsigned long long \n#define sz(a) ((int) a.size())\n#define vi vector<int>\n#define me(a, x) memset(a, x, sizeof(a))\nusing namespace std;\nconst int N = 3007;\nint mod;\nstruct fastmod {\n  typedef unsigned long long u64;\n  typedef __uint128_t u128;\n\u00a0\n  int m;\n  u64 b;\n\u00a0\n  fastmod(int m) : m(m), b(((u128)1 << 64) / m) {}\n  int reduce(u64 a) {\n    u64 q = ((u128)a * b) >> 64;\n    int r = a - q * m;\n    return r < m ? r : r - m;\n  }\n} z(2);\nstruct mint {\n\tint x;\n\tinline mint(int o = 0) { x = o; }\n\tinline mint & operator = (int o) { return x = o, *this; }\n\tinline mint & operator += (mint o) { return (x += o.x) >= mod && (x -= mod), *this; }\n\tinline mint & operator -= (mint o) { return (x -= o.x) < 0 && (x += mod), *this; }\n\tinline mint & operator *= (mint o) { return x = z.reduce((ll) x * o.x), *this; }\n\tinline mint & operator ^= (int b) {\n\t\tmint w = *this;\n\t\tmint ret(1);\n\t\tfor(; b; b >>= 1, w *= w) if(b & 1) ret *= w;\n\t\treturn x = ret.x, *this;\n\t}\n\tinline mint & operator /= (mint o) { return *this *= (o ^= (mod - 2)); }\n\tfriend inline mint operator + (mint a, mint b) { return a += b; }\n\tfriend inline mint operator - (mint a, mint b) { return a -= b; }\n\tfriend inline mint operator * (mint a, mint b) { return a *= b; }\n\tfriend inline mint operator / (mint a, mint b) { return a /= b; }\n\tfriend inline mint operator ^ (mint a, int b) { return a ^= b; }\n};\ninline mint qpow(mint x, int y = mod - 2) { return x ^ y; }\nmint fac[N], ifac[N], inv[N];\nvoid init(int x) {\n\tfac[0] = ifac[0] = inv[1] = 1;\n\tL(i, 2, x) inv[i] = (mod - mod / i) * inv[mod % i];\n\tL(i, 1, x) fac[i] = fac[i - 1] * i, ifac[i] = ifac[i - 1] * inv[i];\n} \nmint C(int x, int y) {\n\treturn x < y || y < 0 ? 0 : fac[x] * ifac[y] * ifac[x - y];\n}\ninline mint sgn(int x) {\n\treturn (x & 1) ? mod - 1 : 1;\n}\n\u00a0\nint n;\nmint g[N][2];\nmint val[N];\nvoid Main() {\n\tcin >> n >> mod;\n\tz = fastmod(mod);\n\tinit(n);\n\tL(i, 0, n) L(o, 0, 1) g[i][o] = 0;\n\tg[0][0] = 1;\n\tL(i, 1, n) \n\t\tg[i][0] = g[i - 1][0] * i + g[i - 1][1], g[i][1] = (g[i - 1][0] + g[i - 1][1]) * i;\n\tL(d, 0, n - 1) {\n\t\tint len = n - d;\n\t\tmint sum = g[d][0] + g[d][1];\n\t\tsum *= fac[n - (len + 1) / 2] * ifac[n - len];\n\t\tsum *= fac[n - len / 2] * ifac[n - len];\n\t\tval[len] = sum;\n\t}\n\tval[0] = qpow(n, n);\n\tL(o, 0, 1) L(i, 1, n) val[i] -= val[i + 1];\n\tL(i, 1, n) val[0] -= val[i];\n\tL(i, 0, n) {\n\t\tcout << val[i].x << ' ';\n\t}\n\tcout << '\\n';\n\tL(i, 0, n) val[i] = 0;\n}\nint main () { \n\tios :: sync_with_stdio(false);\n\tcin.tie (0); cout.tie (0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"